Содержание
Fine HTML
Printed version
txt(Word,КПК)
Lib.ru html
Научно-популярные статьи о технике
---------------------------------------------------------------
     OCR: Wesha the Leopard
---------------------------------------------------------------
 * В.Мейеров. Инженер * 
Лиловый, золотой, багряный
   Если бы английский химик Уильям Перкин жил на несколько десятилетий
позже, он бы даже и не  пытался  получить  противомалярийный  препарат
хинин из анилина. В 1856 году органическая химия как  наука  была  еще
слишком слабо развита, чтобы  ученый  мог  понять  нереальность  своей
затеи. Он упорно проводил опыт за опытом, получая вместо хинина густую
черную массу, очень похожую на деготь. Каково же было  его  удивление,
когда из этой  смолы  удалось  выделить  вещество  красивого  лилового
цвета.  Без  особой  надежды  на  успех  этим  веществом   попробовали
покрасить шелк - и с тех пор имя  ученого  навсегда  вошло  в  историю
химии. Он открыл один из первых  искусственных  красителей  -  мовеин.
Несмотря на юный возраст - в момент открытия ему было всего 18 лет,  -
Перкин был человеком решительным, предприимчивым. В течение  двух  лет
он организовал завод по производству мовеина. С  этого  времени  берет
свое начало эра искусственных (или, как  их  называют,  синтетических)
красителей.


                           Паруса Клеопатры

   До тех пор  люди  применяли  только  природные  красящие  вещества.
Добывать их научились еще в Древнем Египте. Кампешевое дерево и  корни
марены, сок акации и ягоды черники, цветы шафрана и резеды -  вот  что
было источником красителей. Даже из высушенных тел насекомых  кошенили
получали красивый алый краситель кармин.
   Знаменитый красный краситель древности - античный  пурпур  добывали
из специальных желез особых морских моллюсков -  багрянок.  Доставался
он очень дорогой ценой. Чтобы получить  всего  один  грамм  красителя,
надо было достать из морских глубин несколько десятков тысяч  раковин.
Зато и ценился пурпур буквально на вес  золота.  Знаменитый  оратор  и
политический деятель Цицерон, занимавший  должность  первого  консула,
носил  дважды  окрашенные  пурпуром  одежды  в  честь  признания   его
выдающихся заслуг. А легендарная египетская царица Клеопатра, огромные
богатства которой давали ей право на самые  безрассудные  поступки,  в
один  прекрасный  день  приказала  выкрасить  пурпуром  паруса   своих
кораблей. Один такой парус стоил увесистого золотого слитка.
   История  красителей  хранит   много   интересных   событий,   порой
курьезных, а порой и драматических. В средние  века  между  Италией  и
Швейцарией даже разразилась настоящая война из-за нескольких  десятков
килограммов красителя шафрана.
   Богата событиями история индиго - "короля"  красителей.  С  древних
пор его  добывали  из   стеблей   и   листьев   растения   индигоферы,
произрастающего в тропических странах Азии. В  Европу  индиго  в  VIII
веке  завезли  арабские  купцы,  но  против   него   дружно   восстали
европейские красильщики. Они красили ткани в синий цвет соком растения
вайды, часто встречавшегося но берегам рек, и заморский краситель  был
им не нужен. В германских городах индиго при поддержке церкви объявили
"новоизобретенной  мошеннической  едкой  и   разрушительной   краской,
называемой также дьявольской краской". Кое-где  красильщики  вынуждены
были ежегодно давать обет не применять  индиго  под  угрозой  смертной
казни. Но, несмотря на  препятствия,  король  красителей  со  временем
занял подобающее ему место. А в  конце  прошлого  века  вокруг  индиго
вновь разгорелись страсти. Немецкий химик Адольф Байер  после  упорных
пятнадцатилетних исследований установил строение индиго и в 1882  году
получил его искусственным путем.  Поначалу  синтетический  индиго  был
дорогим, но уже в первые годы нашего столетия искусственный  краситель
стал почти в три раза дешевле натурального. Потерпевшие крах  торговцы
природным индиго пытались  было  опять  с  помощью  церкви  обрушиться
теперь уже на синтетический краситель. Но проклятьями прогресса  науки
не остановишь. А индиго производится в больших количествах  и  по  сей
день. Особенно высоким спросом он пользуется в  последнее  десятилетие
как лучший краситель для джинсовых тканей.


                      "Я раскрашу целый свет..."

   В относительно короткое время синтетические  красители  практически
полностью вытеснили натуральные. Число их росло очень быстро и  сейчас
значительно превышает 10 тысяч. По  своим  свойствам  они  превосходят
природные, стоят значительно дешевле, да и получать их гораздо  проще.
Основным  сырьем   для   производства   красителей   служат   продукты
переработки нефти и  коксования  каменного  угля.  Исторически  первые
синтетические красители были получены из анилина,  и  со  временем  за
ними  так  и  осталось  название  анилиновых,  а  отрасль   химической
промышленности, выпускающая красители, называется анилинокрасочной.
   Все, что надето  на  вас,  вплоть  до  пуговиц  и  шнурков  ботинок
окрашено синтетическими красителями. А что окружает  вас  в  квартире?
Мебель, шторы на окнах и  обои  на  стенах,  всевозможные  изделия  из
пластмасс, кожаные и резиновые вещи, детские игрушки - цвет всем  этим
столь разным предметам тоже дают синтетические красители. Благодаря им
мы смотрим  цветные  кинофильмы,  читаем  книги  и  журналы  с  яркими
иллюстрациями, пишем шариковыми ручками и фломастерами всех цветов.
   Как видите, окрашивать приходится очень разные по  своим  свойствам
материалы. И  каждый  материал  требует  особенных,  только  для  него
пригодных методов крашения.
   А для того чтобы  покрасить  кожу,  нужна  сложная  предварительная
обработка. Сначала кожу несколько дней выдерживают в растворе  извести
в смеси с сернистым натрием для  удаления  волосяного  покрова.  После
этого специальным составом производят ее  обеззоливанне  и  смягчение.
Потом кожу дубят, чтобы она  стала  прочной  и  пластичной,  приобрела
водоотталкивающие и противогнилостные  свойства.  Только  после  этого
кожу красят в нужный цвет.
   Очень   интересно   происходит   процесс   крашения   изделий    из
анодированного  алюминия.  Сначала  собирают  электрическую  цепь,   в
которой окрашиваемая алюминиевая пластинка служит анодом. Анод и катод
опускают  в  разбавленную  серную  кислоту   и   начинают   пропускать
определенной силы электрический ток. При этом на поверхности  алюминия
образуется окисная пленка,  которая  легко  окрашивается  красителями.
После  крашения  проводят  процесс  электрохимической   полировки,   в
результате которого пленка затягивается и в дальнейшем не подвергается
внешним воздействиям.
   Большинство   производимых   красителей    идет    в    текстильную
промышленность для крашения тканей.  При  этом  для  различных  тканей
нужны   разные   красители:   одними   красят   шерсть,   другими    -
хлопчатобумажные ткани, третьими - ткани  из  различных  синтетических
волокон. Но ко  всем  этим  красителям  предъявляется  одно  и  то  же
требование - давать окраску не только красивую, но и  прочную.  А  это
значит, что окраска не должна  выгорать  на  солнце  и  портиться  при
глажении ткани утюгом, линять при стирке и оставлять  следы при трении
на белой ткани. Значит, краситель должен быть прочно связан с  тканью.
Большинство красителей удерживается на ткани за  счет  сил  притяжения
между  их  молекулами  и  волокнами  ткани.  Если  эти  силы  окажутся
недостаточно прочными, то окраска будет линять при стирке или во время
дождя. Гораздо более прочную окраску дают  недавно  открытые  активные
красители. В их молекулах есть активная группа, которая  при  крашении
отщепляется. При этом между  красителем  и  волокном  ткани  возникает
прочная химическая связь.
   Для получения тканей  с  рисунком  применяют  специальные  печатные
машины.  Способ  нанесения  рисунка  зависит  от   его   особенностей.
Допустим, нужна ткань с таким рисунком -  по  белому  полю  разбросаны
синие цветы. Окраску получают при помощи прямой печати, нанося рисунок
на белую ткань. А если необходима обратная картина -  белые  цветы  на
синем фоне? В этом случае берут уже окрашенную однотонную синюю  ткань
и специальным составом вытравляют на  ней  рисунок.  Вытравной  состав
может  содержать  краситель  какого-нибудь  другого  цвета,   например
желтый. Тогда мы получим синюю ткань с желтыми цветами. Для  получения
более сложных узоров применяют резервную печать. Определенные  участки
на ткани  предварительно  покрывают  резервирующим  веществом,  и  при
нанесении красителя они уже не окрашиваются. Совсем  недавно  появился
еще один  интересный  способ  получения  сложного  узора  на  ткани  -
переводная печать. Рисунок получают  почти  так  же,  как  на  детских
переводных  картинках.  Сначала  он  наносится  на  бумагу,  потом   в
определенных  условиях  бумагу  совмещают  с  тканью  -  и   краситель
переходит на ткань. Так можно получить  многоцветный  и  очень  тонкий
рисунок, мало чем уступающий книжным иллюстрациям.
   Крашение тканей относится к древнейшим ремеслам  человека.  Издавна
оно считалось "черным" ремеслом. Проводили крашение в открытых  чанах,
неприятный запах от которых разносился на десятки метров от  красилен.
Во многих городах красильщиков вообще изгоняли куда-нибудь подальше от
жилья.  Резко  изменилась  эта  картина  в   наши   дни.   Современные
текстильные фабрики - это хорошо оснащенные различным  технологическим
оборудованием   предприятия.   На   многих    из    них    применяются
автоматизированные методы непрерывного крашения  и  печатания  тканей.
Ничто уже не напоминает о прежнем "черном" ремесле.
   До сих пор разговор шел только о цветных красителях. Но ведь наряду
с цветными нужны и белые  ткани,  белая  бумага.  Для  придания  белым
материалам еще большей белизны в последнее время все тире  применяются
оптические отбеливатели, или белофоры. С какой целью они понадобились?
Чтобы ответить на этот вопрос, давайте вспомним, что такое белый цвет.
Любое тело кажется нам белым только  тогда,  когда  оно  не  поглощает
лучей видимой  части  света,  а  только  отражает  их.  Если  же  тело
поглощает хотя бы  какие-нибудь  видимые  лучи,  то  оно  кажется  нам
окрашенным. Цвет его будет зависеть от того,  какие  именно  лучи  оно
поглощает. Вы, наверное, обращали внимание на то,  что  белая  бумага,
долго находившаяся на  солнце,  приобретает  желтоватый  оттенок.  Это
происходит потому, что под  действием  солнечного  света  в  структуре
бумаги происходят изменения, и она частично начинает поглощать видимые
синие лучи. То же самое происходит и с белым бельем после стирки.  Вот
тут-то и придут на помощь белофоры! По  своему  строению  это  обычные
красители. Но молекулы их обладают  очень  интересным  свойством.  Очи
поглощают невидимые глазом ультрафиолетовые лучи и  преобразуют  их  в
лучи  видимые.  И  как  раз  в  такие,  поглощение  которых   вызывает
пожелтение белой ткани или бумаги.  Таким  образом,  обработка  белого
материала оптическим  отбеливателем  предотвращает  появление  у  него
неприятного желтого оттенка. Да и сам материал после  такой  обработки
будет выглядеть значительно белее, чем он есть на самом деле.


                        С заданными свойствами

   В  народной  медицине  с  давних  пор  многие  природные  красители
применяли как лекарства. Красной червленью лечили  коклюш  у  детей  и
заболевания почек у взрослых. Другие красители помогали  при  головной
боли, болезнях сердца, бессоннице. Вскоре после того, как были открыты
синтетические красители, оказалось, что многие из  них  тоже  обладают
лекарственным  действием.  Сейчас  красители   применяются   в   таких
различных областях медицины, как лечение малярии и кожных заболеваний,
для остановки кровотечений и дезинфекции. Кому из  нас  в  детстве  не
мазали зеленкой разбитые коленки!
   В последние годы химики, заняты поиском таких  красителей,  которые
одновременно сочетали бы в  себе  лекарственные  или  другие  полезные
свойства  с  красящей  способностью.  Несколько  таких  красителей   с
заданными свойствами уже получено.
   Шерстяные и  хлопчатобумажные  ткани,  оказывается,  имеют  злейших
врагов. Это различные микроорганизмы, плесневые грибки и бактерии. При
попадании  на  ткань  они  могут  быстро  размножаться,  отчего  ткань
приходит в негодность  -  гниет,  теряет  прочность.  Этот  приносящий
огромный вред процесс по  аналогии  с  коррозией  металлов  называется
биологической коррозией. Особенно страдают от нее ткани, находящиеся в
тропических условиях при высокой температуре и влажности  воздуха,  то
есть в самых благоприятных условиях для  размножения  микроорганизмов.
Для защиты от биологической коррозии  ткани  пропитывают  специальными
антимикробными препаратами. Однако  такая  пропитка  часто  связана  с
рядом неудобств.  Гораздо  выгоднее  и  удобнее  применять  красители,
обладающие  биозащитными  свойствами.  Два  процесса  -   крашение   и
антимикробная пропитка - совмещаются в один. Биозащитные красители для
шерстяных тканей промышленностью уже  производятся.  Не  за  горами  и
выпуск  таких  красителей   для   хлопчатобумажных   тканей,   которые
подвержены биологической коррозии в гораздо большей степени.
   Представьте себе, что ступавшей на пол спички начался пожар.  Огонь
мгновенно поднялся по шторам - и вот уже вся комната объята  пламенем.
Быстро погасить такой пожар очень трудно. По скоро на помощь  пожарным
придут  такие  красители,  которые  замедлят  время  горения  ткани  с
нескольких секунд до нескольких минут.  При  пожаре,  где  все  решают
мгновения, это очень важно.
   Получены красители и с другими интересными свойствами. Например,  в
некоторых оптических приборах применяются красители,  изменяющие  свой
цвет в зависимости от освещенности. Другие  красители-хамелеоны  очень
чувствительны к изменению температуры. Их используют  в  технике  там,
где нужно постоянно контролировать температуру, а термометр установить
невозможно.   Красители    находят    применение    в    лазерной    и
копировально-множительной  технике   и   даже   при   океанологических
исследованиях. Так, загадка теплого атлантического течения  Гольфстрим
была решена во многом благодаря очень яркому красителю флуоресцину.
   А что же стало с природными красителями?  Сейчас  о  них  мало  кто
вспоминает.  Правда,  природные  красители   применяются   в   пищевой
промышленности. Так как они  абсолютно  безвредны  для  человека,  ими
подкрашивают  оболочки  для  сыров,  кондитерские  изделия,  ликеры  и
фруктовые воды.
 * Вода - беда, вода - спасение * 
        Классические труды по теории корабля, теории магнитных и
     гироскопических  компасов,  таблицы  непотопляемости  судов,
     работы по строительной механике кораблей... Все это  научное
     наследие выдающегося ученого академика  Алексея  Николаевича
     Крылова, впервые  превратившего  кораблестроение  в  точную,
     математическую науку.
        В этом году исполняется сто двадцать лет со дня  рождения
     великого кораблестроителя и математика. Предлагаем читателям
     одну из глав книги В. Липилина о А.Н. Крылове, готовящейся к
     выходу в  издательстве  "Молодая  гвардия"  в  серии  "Жизнь
     замечательных людей". Большое  внимание  в  главе  уделяется
     творческому содружеству А.Н.  Крылова  с  другим  выдающимся
     русским ученым и флотоводцем, адмиралом Степаном  Осиповичем
     Макаровым.


   С осени 1891 года Крылов,  штабс-капитан  по  Адмиралтейству,  стал
полноправным преподавателем в двух ипостасях. В первой он учил кадет и
гардемаринов,   давая   им   познания   по   плоской   и   сферической
тригонометрии,    начертательной    и     аналитической     геометрии,
дифференциальному и интегральному исчислению. Слушателям  академии  он
читал курс теории корабля и вел практические занятия по математике.
   Не за  горами  было  и  утверждение  в  профессорском  звании,  оно
подтверждалось и  практическими  работами,  и  ценными  теоретическими
трудами. Но и самому претенденту, и специалистам-ученым было очевидно,
что занятие кафедры - далеко не предел.
   Научно-технические интересы Крылова конкретизировались;  ученый,  в
частности, приступил к исследованиям, чтобы ответить на  вопросы:  чем
вызывается опасный размах качки корабля, какие параметры тех или  иных
частей  корабля  наиболее  подходящи  для  его  жизнеобеспечения,  как
действует качка, боковая и килевая, на его части и, наконец, что  есть
качка во всех ее технических аспектах?
   Из  этих  и  многих  других  ответов  на  жизненно  важные  вопросы
рождалась   неумирающая   крыловская   "Теория   корабля".   Рождалась
стремительно, поражая единством теории и практики, прямой зависимостью
создания корабля от математики, то есть утверждая кораблестроение  как
точную науку. Свойства и качества корабля, все без исключения,  должны
рассматриваться и определяться при его проектировании. Какие же прежде
всего?
   Плавучесть,  то  есть  способность  корабля  находиться  на   воде;
остойчивость  -  способность  вернуться  из  критического   положения,
вызываемого какими-либо  силами,  в  состояние  равновесия  на  волне;
маневренность или поворотливость, то есть способность изменять курс по
повороту руля; ходкость  -  способность  идти  с  заданной  скоростью;
килевая качка - раскачивание с носа на корму; бортовая качка, то  есть
переваливание корабля с борта на борт.
   Какие явления происходят при волнении на воде в корпусе корабля?
   При килевой качке нос корабля как  бы  зарывается  в  надвинувшуюся
волну, корма же, напротив, оголяется, что приводит к потери  скорости,
не говоря уж о том, что весь корпус  испытывает  огромное  напряжение,
что не раз  приводило  к  переламыванию  корабля  пополам.  Совершенно
очевидно, что чем меньше качка, тем жизнеобеспеченнее  и  боеспособнее
корабль. Следовательно, в каждом отдельном случае  надлежит  в  точном
соответствии с воздействием качки  находить  длину,  высоту  и  ширину
корпуса корабля, его форму в неразрывной привязке  этих  параметров  к
скорости, положению корпуса относительно волн, точкам размещения груза
по всей площади корабля.
   Нельзя сказать, что перечисленные положения, каждое в  отдельности,
не исследовались  русскими  или  иностранными  учеными  и   практиками
морского дела. Например, англичанин Фруд еще в 1861 году, за два  года
до рождения Крылова, разработал теорию боковой качки, рассматривая  ее
вне совокупности всех других факторов, влияющих на корабль.
   В 1895 году, через год после выхода в свет записок Крылова  "Теория
мореходных качеств корабля",  принесших  автору  мировую  известность,
командир яхты "Полярная звезда", нарушая приказ, не вошел по каналу  в
Либавский порт. Непростое  это  дело  -  невыполнение  приказа,  почти
всегда, даже при  самых  объективных  причинах  оно  наказуемо.  Но  в
Либавском порту яхта должна была принять не  простой  груз,  а  самого
нового самодержца России Николая Второго.
   Объясняя столь невероятное ослушание,  командир  яхты  ссылался  на
свой и чужой опыт, подсказывающий,  что  при  данной  осадке  корабля,
глубине воды и размере набегающей волны  корабли  плотно  садились  на
дно.
   На запрос министра  А.Н.  Крылов  через  три  дня  кратко  ответил:
"Командир яхты  "Полярная  звезда"  прав".  И  представил  необходимые
случаю пояснения и расчеты.
   Но если важная работа  Крылова  интересовала  министерство  главным
образом с точки зрения виновности или правомочности действий  капитана
"Полярной звезды", то английское Общество  корабельных  инженеров  она
привлекла актуальностью. В  ней  таились  ответы  на  вопросы,  почему
корабли переламываются, опрокидываются,  почему  они  в  определенные,
особенно критические моменты становятся неуправляемыми, необузданными,
как дикие мустанги.
   Общество пригласило русского  ученого  Крылова  прочесть  доклад  о
килевой качке на  своем  ежегодном  заседании.  Русский  штабс-капитан
поразил англичан истинно лондонским произношением - Крылов читал  свой
доклад по-английски. От внимания аудитории не ускользнул  ни  один  из
уверенных жестов докладчика, ни один из оборотов  типично  английского
юмора, вводимых Крыловым для общего колорита в специальный  текст.  От
природы сдержанные англичане, забыв о своем приоритете в судостроении,
аплодировали  гостю,  единогласно  избрали  его   иностранным   членом
общества, что случалось очень редко.
   В конце марта 1898 года Крылов вновь приехал в Лондон. На этот  раз
доклад обществу "Общая теория  колебаний  корабля"  вызвал  не  только
восхищение: автору за него присуждена была золотая  медаль.  Всего  за
время существования общества золотой медали было удостоено лишь  шесть
человек, иностранцев среди них не было.
   Возвращаясь из второй лондонской командировки, он  в  конце  апреля
1898 года посетил Берлинскую техническую школу, в которой его внимание
привлек кораблестроительный отдел, постановка в нем  преподавания.  По
глубокому убеждению Крылова, России  пора  было  готовить  собственных
инженеров-кораблестроителей.
   В  Петербурге  Крылов  представил   по   начальству   обстоятельную
докладную записку о подготовке инженеров - кораблестроителей.  Записке
был дан ход, она достигла сразу трех министров - морского, финансов  и
просвещения. Уже через год  состоялось  совещание,  положившее  начало
учреждению Петербургского политехнического института. В составе нового
высшего учебного заведения образован, конечно,  и  кораблестроительный
факультет.
   Совершенно  естественно,  что  такой  человек,  как  адмирал   С.О.
Макаров, обладающий схожими с Крыловым качествами, не мог пройти  мимо
него. Как и наоборот - не мог Крылов не искать поддержку  у  Макарова.
Состоя главным инспектором морской артиллерии, адмирал по долгу службы
рассматривал представленную к его заключению  документацию  на  прибор
для автоматической стрельбы на море. Автор прибора, а им  был  капитан
Крылов, привлек внимание не только оригинально  простым  изготовлением
нужного  и  ценного  морским  артиллеристам   приспособления,   но   и
необычностью письменного изложения своего предложения.
   Таким образом, заочное  знакомство  адмирала  Макарова  и  капитана
Крылова состоялось в 1894 году. В это время Степан Осипович  вынашивал
мысль о покорении Северного Ледовитого океана, создавал проект первого
в мире ледокола, на котором намеревался пройти в  вечных  неприступных
льдах. "Ни одна нация, - писал С.О. Макаров,  -  не  заинтересована  в
ледоколах столько, сколько Россия. -  И,  развивая  свое  утверждение,
прибегал к образности: - Если сравнить Россию со зданием, то нельзя не
признать, что фасад его выходит на Ледовитый океан".
   Они встретились и поняли,  что  эта  встреча  продиктована  судьбой
русского флота, которому они оба преданы всей душой.
   Со стороны, особенно не моряку, наверное,  забавно  было  смотреть,
как маститый адмирал и вошедший  в  пору  возмужания  капитан,  что-то
возбужденно обсуждая, доказывая друг другу, по-мальчишечьи запускали в
бассейне  кораблик.  Наконец,   запустив,   зачарованно,   как   могло
показаться,  тоже  по-мальчишечьи,  следили  за  его  плаванием  и   в
особенности за теми моментами, когда кораблик, порыскав, опрокидывался
и тонул.
   Еще за 20 лет до  знаменательной  встречи,  когда  Алексей  Крылов,
восхищенный подвигами русских моряков на Черном море,  лишь  готовился
поступить в Морское училище, Макаров выступил в "Морском сборнике"  со
своей теорией непотопляемости  судов.  Суть  теории  была  проста,  но
чрезвычайно  необычна   и   потому,   наверное,   при   первоначальном
ознакомлении вызывала чувство протеста. В самом деле, столько, сколько
существует  корабль,  в  случае  внезапного  затопления  его   спасали
откачкой хлынувшей воды. От нее  освобождались  по-разному  -  черпали
руками, ковшами, специальными манерками, ведрами, наконец, помпами.  И
вдруг  боевой  офицер,  занявшийся   этой   насущной   проблемой,   во
всеуслышание говорит; нужно не  бороться  с  водой,  откачивая  ее,  а
немедленно брать в союзники.
   Немело эпитетов было произнесено в адрес автора "безумной  теории",
хотя  она  и  подкреплялась  убедительными  расчетами,  полученными  в
результате как опытов, так  и  непосредственным  участием  Макарова  в
спасении кораблей, например,  канонерской  лодки  "Русалка".  Пробоина
размером в квадратный метр, доказывал  ученый-флотоводец,  при  осадке
корабля на 5 метров принимает более тридцати тысяч тонн воды в час.  А
какая ее масса хлынет в пробоину в два раза, в несколько раз  большую?
Мыслимо ли откачать этот водопад малосильной помпой -  "лягушкой"  или
даже мощным насосом?
   Допустим даже, что переборки в терпящем бедствие корабле достаточно
прочны и способны сдержать напор водяной стихии,  не  допустить  ее  в
другие отсеки, что произойдет тогда? В лучшем случае корабль  окажется
в беспомощном положении, лежащим на боку, в худшем же, что  происходит
чаще, - корабль, теряя остойчивость, переворачивается  вверх  килем  и
гибнет.
   Но что, если немедленно затопить отсек, расположенный по диагонали,
противоположной пострадавшему, не очевидно ли, что  корабль,  сохранив
равновесие, лишь глубже осядет в воду? При  таком  состоянии  корабль,
во-первых,  сохранит  боеспособность,  а  во-вторых,  если  это  будет
необходимым, он будет способен добраться до порта собственным ходом.
   Переубеждая скептиков, ломая лед равнодушия  и  чиновничью  рутину,
неистовый моряк Макаров привлек наконец к своей теории и  практическим
опытам внимание широкой прогрессивной общественности России. Одним  из
его деятельных союзников стал Д.И.  Менделеев.  12  марта  1897  года,
когда адмирал Макаров закончил чтение доклада о необходимости освоения
Северного Ледовитого океана и строительства ледокола для этого, первым
зааплодировал великий  русский  ученый.  Его  аплодисменты  поддержали
другие ученые, инженеры, писатели, моряки  и  даже  высокопоставленные
правительственные   чиновники,   присутствовавшие   в   конференц-зале
Российской академии наук. Вопрос о ледоколе "Ермак" - детище  Макарова
- был предрешен.
   При  поддержке  Менделеева  было   осуществлено   и   строительство
"Опытового бассейна" - прообраза современных НИИ.  В  этом  Макаров  и
Менделеев  действовали  уже  единым  фронтом.  Казначейство  отпустило
великому ученому полтора миллиона рублей на  разработки  по  получению
русского  бездымного  пороха.  Блестяще  и  остроумно  решив  задание,
Менделеев затратил на  его  выполнение  третью  часть,  оставшийся  же
миллион  он  рекомендовал  морскому  министерству   на   строительство
"Опытового бассейна" и закупку оборудования на него.
   При столь авторитетном проталкивании через  два  года  бассейн  был
введен в строй в районе так называемой петербургской Новой  Голландии,
между Николаевским мостом через Неву и Флотским экипажем  у  Поцелуева
моста на Мойке. Это сооружение было в 120  метров  длиною,  6,7  метра
шириною и 3 метра глубиною при емкости в 2500 кубических метров  воды.
Своеобразным аналогом  такому  бассейну  может  быть  аэродинамическая
труба с той лишь разницей, конечно, что в бассейне  испытываются  силы
воздействия не на модели самолетов, а на модели кораблей.
   Одним из  рабочих  и  весьма  показательных  моментов  в  "Опытовом
бассейне"  была  лекция  адмирала  Макарова  для  командного   состава
Балтийского флота. В  своем  докладе  Степан  Осипович,  в  частности,
подробно разобрал причины гибели  английского  броненосца  "Виктория",
модель которого находилась в  бассейне.  Броненосец  затонул,  получив
ничтожную пробоину в носу. Отметив,  что  на  "Виктории"  никто,  даже
адмирал,  не  придал  роковой  пробоине   надлежащего   значения,   он
утверждал, что, будь на броненосце по  команде  адмирала  затоплены  и
кормовые отсеки,  трагедии  бы  не  произошло.  Произнося  эти  слова,
адмирал Макаров вместе со слушателями  подошел  к  борту  бассейна,  у
которого стояла модель броненосца. Освободив ее от швартовых,  адмирал
снял и пластырь с  имитированной  пробоины  в  носовой  части  модели.
Производя эти действия, адмирал говорил:
   - Вот нос раненого корабля чуть-чуть покрылся водой...
   Далее за  адмирала  красноречиво  досказала  сама  модель:  нос  ее
рыскнул в воду, "Виктория" опрокинулась  вверх  килем  и  в  считанные
секунды достигла дна.
   - Воистину  лучше  один  раз  увидеть,  чем  сто  раз  услышать,  -
задумчиво произнес капитан Крылов, присутствовавший на лекции.
   Эффект и в самом деле  был  поразительным.  Адмирал  Макаров  решил
повторить опыт, так сказать, в развернутом виде.  Модель  извлекли  со
дна, освободили от воды, подвели имитационный пластырь.
   Когда  Степан  Осипович  этот  пластырь  снял  вновь  и  немедленно
наполнил водой кормовые  отсеки,  модель,  осев,  уверенно  продолжала
держаться на водной поверхности бассейна.
   Идеи Макарова захватили Крылова, его инженерная фантазия развила их
дальше, увязывая непотопляемость со всем корабельным  комплексом.  Ему
виделись корабли, спасаемые из самых безнадежных положений. Он увлечен
идеей и подкрепляет ее многими техническими обоснованиями. В  них  как
основа -  математика.  Тому  прямая  необходимость:  корабельный  трюм
разделен на десятки и даже сотни отсеков, не так-то  просто  командиру
принять решение, какой из них следует затопить, чтобы удержать корабль
на воде.
   Приказом по морскому ведомству от 1 января  1900  года  капитан  по
Адмиралтейству  профессор  Морской  академии  Крылов  назначался  и.о.
заведующего "Опытового бассейна". Весьма  примечательно,  что  тем  же
приказом вице-адмирал Макаров был назначен главным командиром крепости
и военным губернатором города Кронштадта.
   Сразу после назначения Макаров пишет Крылову: "Вы в это живое  дело
внесете правильные основания, и работы бассейна потеряют их теперешний
случайный характер".
   Теперь в "кораблики" заиграли офицеры - слушатели Морской академии,
потому что деятельный  профессор  Крылов  видел  в  этой  игре  крайне
необходимое любому моряку продолжение теории  корабля.  Новая  морская
дисциплина потребовала от своего основателя немалых усилий.  Именно  с
этих  пор  его  деятельность   отчетливо   разграничивается   на   две
взаимосвязанные   части.   Теоретическую   он   ведет   в    академии,
научно-техническую  осуществляет  в  "Опытовом  бассейне",  на  модели
отрабатывая максимально  возможное  количество  вариантов  повреждений
корабля. При этом учитывался крен корабля и производился расчет, какие
отсеки  в  каждом  конкретном  случае  следует  затоплять.   Из   этой
тщательной проверки, кажется, сама по себе возникла мысль  о  создании
таблиц непотопляемости для каждого корабля в отдельности с учетом  его
особенностей. В сложнейшей  ситуации  командиру  не  придется  тратить
время на прикидку и расчеты, достаточно будет  взглянуть  на  таблицы,
чтобы определить отсеки затопления.
   Адмирал Макаров очень доволен  техническим  обоснованием  и  вообще
развитием его идей - работа, по  его  мнению,  перешла  в  надежные  и
крепкие руки.
Популярность: 18, Last-modified: Mon, 04 Dec 2000 17:44:35 GMTКерниган, Ричи. Язык C
Аннотация
Содержание
0.1. Введение
 * 1. Учебное введение * 
1.1. Hачинаем
1.2. Переменные и арифметика
1.3. Оператор FOR
1.4. Символические константы
1.5. Набор полезных программ
1.5.1. Ввод и вывод символов
1.5.2. Копирование файла
1.5.3. Подсчет символов
1.5.4. Подсчет строк
1.5.5. Подсчет слов
1.6. Массивы
1.7. Функции
1.8. Аргументы - вызов по значению
1.9. Массивы символов
1.10. Область действия: внешние переменные
1.11. Резюме
 * 2. Типы, операции и выражения * 
2.1. Имена переменных
2.2. Типы и размеры данных
2.3. Константы
2.3.1. Символьная константа
2.3.2. Константное выражение
2.3.3. Строчная константа
2.4. Описания
2.5. Арифметические операции
2.6. Операции отношения и логические операции
2.7. Преобразование типов
2.8. Операции увеличения и уменьшения
2.9. Побитовые логические операции
2.10. Операции и выражения присваивания
2.11. Условные выражения
2.12. Старшинство и порядок вычисления
 * 3. Поток управления * 
3.1. Операторы и блоки
3.2. IF - ELSE
3.3. ELSE - IF
3.4. Переключатель
3.5. Циклы - WHILE и FOR
3.6. Цикл DO - WHILE
3.7. Оператор BREAK
3.8. Оператор CONTINUE
3.9. Оператор GOTO и метки
 * 4. Функции и структура программ * 
4.1. Основные сведения
4.2. Функции, возвращающие нецелые значения
4.3. Еще об аргументах функций
4.4. Внешние переменные
4.5. Правила, определяющие область действия
4.5.1. Область действия
4.6. Статические переменные
4.7. Регистровые переменные
4.8. Блочная структура
4.9. Инициализация
4.10. Рекурсия
4.11. Препроцессор языка "C"
4.11.1. Включение файлов
4.11.2. Макроподстановка
 * 5. Указатели и массивы * 
5.1. Указатели и адреса
5.2. Указатели и аргументы функций
5.3. Указатели и массивы
5.4. Адресная арифметика
5.5. Указатели символов и функции
5.6. Указатели - не целые
5.7. Многомерные массивы
5.8. Массивы указателей; указатели указателей
5.9. Инициализация массивов указателей
5.10. Указатели и многомерные массивы
5.11. Командная строка аргументов
5.12. Указатели на функции
 * 6. Структуры * 
6.1. Основные сведения
6.2. Структуры и функции
6.3. Массивы сруктур
6.4. Указатели на структуры
6.5. Структуры, ссылающиеся на себя
6.6. Поиск в таблице
6.7. Поля
6.8. Объединения
6.9. Определение типа
 * 7. Ввод и вывод * 
7.1. Обращение к стандартной библиотеке
7.2. Стандартный ввод и вывод - функции GETCHAR и PUTCHAR
7.3. Форматный вывод - функция PRINTF
7.4. Форматный ввод - функция SCANF
7.5. Форматное преобразование в памяти
7.6. Доступ к файлам
7.7. Обработка ошибок - STDERR и EXIT
7.8. Ввод и вывод строк
7.9. Несколько разнообразных функций
7.9.1. Проверка вида символов и преобразования
7.9.2. Функция UNGETC
7.9.3. Обращение к системе
7.9.4. Управление памятью
 * 8. Интерфейс системы UNIX * 
8.1. Дескрипторы файлов
8.2. Низкоуровневый ввод/вывод - операторы READ и WRITE
8.3. Открытие, создание, закрытие и расцепление (UNLINK)
8.4. Произвольный доступ - SEEK и LSEEK
8.5. Пример - реализация функций FOPEN и GETC
8.6. Пример - распечатка справочников
8.7. Пример - распределитель памяти
 * 9. Приложение А: справочное руководство по языку 'C' * 
9.1. Введение
10. Лексические соглашения
10.1. Комментарии
10.2. Идентификаторы (имена)
10.3. Ключевые слова
10.4. Константы
10.4.1. Целые константы
10.4.2. Явные длинные константы
10.4.3. Символьные константы
10.4.4. Плавающие константы
10.5. Строки
10.6. Характеристики аппаратных средств
11. Синтаксическая нотация
12. Что в имени тебе моем?
13. Объекты и L-значения
14. Преобразования
14.1. Символы и целые
14.2. Типы FLOAT и DOUBLE
14.3. Плавающие и целочисленные величины
14.4. Указатели и целые
14.5. Целое без знака
14.6. Арифметические преобразования
15. Выражения
15.1. Первичные выражения
15.2. Унарные операции
15.3. Мультипликативные операции
15.4. Аддитивные операции
15.5. Операции сдвига
15.6. Операции отношения
15.7. Операции равенства
15.8. Побитовая операция 'и'
15.9. Побитовая операция исключающего 'или'
15.10. Побитовая операция включающего 'или'
15.11. Логическая операция 'и'
15.12. Операция логического 'или'
15.13. Условная операция
15.14. Операция присваивания
15.15. Операция запятая
16. Описания
16.1. Спецификаторы класса памяти
16.2. Спецификаторы типа
16.3. Описатели
16.4. Смысл описателей
16.5. Описание структур и объединений
16.6. Инициализация
16.7. Имена типов
16.8. TYPEDEF
17. Операторы
17.1. Операторное выражение
17.2. Составной оператор (или блок)
17.3. Условные операторы
17.4. Оператор WHILE
17.5. Оператор DO
17.6. Оператор FOR
17.7. Оператор SWITCH
17.8. Оператор BREAK
17.9. Оператор CONTINUE
17.10. Оператор возврата
17.11. Оператор GOTO
17.12. Помеченный оператор
17.13. Пустой оператор
18. Внешние определения
18.1. Внешнее определение функции
18.2. Внешние определения данных
19. Правила, определяющие область действия
19.1. Лексическая область действия
19.2. Область действия внешних идентификаторов
20. Строки управления компилятором
20.1. Замена лексем
20.2. Включение файлов
20.3. Условная компиляция
21. Неявные описания
22. Снова о типах
22.1. Структуры и объединения
22.2. Функции
22.3. Массивы, указатели и индексация
22.4. Явные преобразования указателей
23. Константные выражения
24. Соображения о переносимости
25. Анахронизмы
26. Сводка синтаксических правил
26.1. Выражения
26.2. Описания
26.3. Операторы
26.4. Внешние определения
26.5. ПрепроцессорПримерный java-скрипт для Automatic proxy configuration
Более-менее рабочий вариант скрипта в довесокMoscow Internet providers
Ищите списки списков провайдеров
Когда выбираете провайдера, смотреть надо
Список провайдеров
 * НОВОСТИ РОССИЙСКОГО ИНТЕРНЕТА * 
АО "Релком"
"Демос"
"Россия-он-лайн"
Как выбрать провайдера
 * INTERNET-ПРОВАЙДЕРЫ В МОСКВЕ * 
Обзор рынка услуг по состоянию на октябрь 1996г.
Подключение в режиме Dialup-IP
Таблица 1Содержание
Fine HTML
Printed version
txt(Word,КПК)
Lib.ru html
Дмитрий Демин
---------------------------------------------------------------
 From: Irina Tsvetkov (irina@any.com)
---------------------------------------------------------------
  Демин Дмитрий Валентинович
( 1934 -1998 )

     Жизнь  и творчество Дмитрия Валентиновича Демина
была тесно связана с Комплексной Самодеятельной Экспедицией  -  удивительным
сообществом   единомышленников   ,  посвятивших  себя  изучению  загадки  Тунгусского метеорита. Он был одним из  основателей  КСЭ  и  ее
идеолог,   основоположник   космодранческой   литературы,   участник  многих
экспедиций, начиная с 1959 г.
     Стихи  Д.В.Демина печатаются по сборнику "Синильга" ( изд-во "Сибирский
писатель", 1996 г.), посвященному 90-летию  падения  Тунгусского  метеорита.
Д.В.Демин был одним из составителей этого сборника.
Cтихи и песни 60-х -- 70-х годов:
Стихи 80-х -- 90-х годов:
 * CТИХИ И ПЕСНИ 60-х -- 70-х годов: * 
x x x
Косогоры, косогоры, косогоры,
И ручьев ледяная вода.
Эти сборы, эти сборы, эти споры
Не кончаются никогда.
Закачается луна над поляной,
Согревая палаточный уют.
Кто не пьяный, кто не пьяный (кто не пьяный?),
Тот, наверно, или враг, или плут.

Нет, не скоро, не скоро, не скоро
Мы как мамонты в вечность сойдем.
Мы придем на свои косогоры
И огромный костер принесем.
Закачается луна над поляной,
Согревая палаточный уют.
Кто не пьяный, кто не пьяный (кто не пьяный?),
Тот, наверно, или враг, или плут.

Ну так что же, старики-командоры,
Это что получилось у нас? -
Пронеслось над косогором, косогором
И по-прежнему скрыто от глаз.
Лишь качается луна над поляной,
Согревая палаточный уют.
Кто не пьяный, кто не пьяный (кто не пьяный?),
Тот, наверно, или враг, или плут.

Косогоры, косогоры, косогоры...
И дыханье спирает в груди...
Мы придем на косогоры, с которых
Снова все у тебя впереди.
Там качается луна над поляной,
Согревая палаточный уют.
Кто не пьяный, кто не пьяный (кто не пьяный?),
Тот, наверно, или враг, или плут.
x x x
Люблю смотреть в твое лицо,
Когда ты рядом спишь,
Когда сжимается в кольцо
Вокруг лесная тишь,
Когда проходит амикан
По сумрачной тайге,
Когда полуночный туман
Стекает по реке.
Быть может, это только сон -
Я зря затосковал.
Люблю смотреть в твое лицо -
Серебряный овал.
Когда на сопки шлет гонцов
Печальная заря,
Люблю смотреть в твое лицо,
Дыханье затая.
Пусть зажигают города
Зеленые огни,
Пусть, исчезая навсегда,
Бегут за днями дни,
Пускай течет иная жизнь
Сквозь пальцы, как песок, -
Люблю, когда ты рядом спишь,
Смотреть в твое лицо.

     В   метеоритных  кругах  эта  песня  получила  название
"Ирландский марш". Странно, ведь вся атрибутика- тунгусская. Взять  хотя  бы
слово амикан -- в переводе с эвенкийского оно значит "медведь".  
x x x
Парни ушли в долину.
Дымкой туман клубится.
Тянется тропка ниткой
В серой осенней мгле.
Где-то на старой ели
Свила гнездо жар-птица.
Где-то легли маршруты
По вековой тайге.
Вслед им махни рукою:
Легкой тропы, бродяги!
Льются дожди косые
В огненный мох болот.
Белым подножьем сосен
Чуть серебрится ягель,
А иностранный спутник
В тучах добычу ждет.
Много дорог прошли мы
По голубой планете,
 Много еще осталось
В жизни пройти дорог.
Сядем к костру, ребята,
И помолчим об этом,
И расцветут легенды
Прямо у наших ног.
Парни вернутся скоро
В стиранных ветром робах.
Снова теплом заимка
Встретит своих ребят.
Белый туман ложится
Клочьями им под ноги
А на таежных реках
Снова костры горят.
x x x
Протянулась тайга
До далеких портов океана.
Здесь растут города,
Добываются руды урана.
Приминая траву,
Мы спешим к заболоченным рекам.
Как я рад, что живу
В середине двадцатого века!
Ждет нас яростный труд.
Пробуждается утро за утром.
Магистрали пройдут
По проложенным нами маршрутам.
Над таежной рекой,
Где нам все до затеса знакомо,
Заблестит под луной
Серебристый ангар космодрома.
Ах, как годы летят,
Как взвиваются в небо ракеты!
Жизнь, запомни ребят,
 Что свершившимся сделали это.
По осенней листве
Мы проходим пикет за пикетом -
Как я рад, что живу
В середине двадцатого века!
x x x
Отстреляна птица, попрятались рыбы,
Над чащей лесною мерцает луна.
Мы тоже могли бы, ах, тоже могли бы
Бродить по полянам, как бродит она.

Тревожно и пусто, как будто бы где-то
Качается омут и стынет вола.
Окончилось лето, окончилось лето,
И снова на стыках стучат поезда.

Мы в город вернемся, раздавшись плечами,
Обнимем друзей и откроем окно.
Но только печали, но только печали,
Нежданной печали постичь не дано...
КОСМИЧЕСКАЯ ПЫЛЬ
Я шлю привет родному факультету
Издалека, за много сотен миль.
Здесь хорошо бродить по белу свету,
Искать стране космическую пыль.

Мои друзья подались в стройотряды
Копить червонцы на автомобиль.
Мне ж суждено до первых снегопадов
Искать стране космическую пыль.

Все по уму, а все-таки неладно...
Пусть кто-нибудь откупорит бутыль!
Я так хотел, чтоб ты со мною рядом
Пошла искать стране космическую пыль.
ЖЕЛЕЗНЫЕ СВОДЫ ЛЕСА
Привет вам, железные своды леса!
Люди, прощайте, а нам пора.
Ляжет за нами туманов завеса,
И вспыхнет солнце на лезвии топора.

Оставь же надежду, идущий с нами, -
Тленны знамена и имена.
Завтра грядущий зелеными снами
Прочтет затесов заплывшие письмена.

Гаснут огни на ночных болотах.
Льется прохладный металл тайги.
Молча проходят усталые роты ,
И неизвестность бросают под сапоги.
Я - РОБОТ, Я - СОЛДАТ
Забудь постельный пух!
Я - робот, я - солдат.
Поставьте на Тропу,
Сильней толкните в зад.
Кончается большак,
Знакомый поворот.
И прошлой жизни шлак
Оставлен у ворот.

Прощайте, проводник,
Возьмите мой жетон.
Пойду я напрямик -
На север животом
Туда, где нету сел,
Где комариный плач,
Где сам себе козел
И сам себе палач.

Стартуют корабли.
Туманятся глаза.
Ушедшие с земли
Вернутся ли назад?
Шагать я буду впредь,
Как робот, как солдат.
Чтоб мне не умереть,
Сильней толкните в зад.

     Песни  "Космическая пыль", "Железные своды леса", "Я -
робот, я -солдат" написаны при содействии В. Воробьева. Сам В. Воробьев  так
определяет  характер  этого  "содействия":  "Кое-где  мне удавалось вставить
удачную строчку, другую. И это - все".  
 * Стихи 80-х -- 90-х годов: * 
ДВЕ НОЧИ С ЧЕРНИКОВЫМ
Я отдавался до утра
Во власть момента.
Тянулась лента из нутра,
Тянулась лента.
И было тихо все вокруг,
Темно и голо,
Но совершал за кругом круг
Пророка голос.
Дымится пища для богов,
Оскал личины.
Но кто откликнется на зов
Твоей лучины?
Кто различит в кромешной тьме
Сигнал тревоги
Без аллегорий и примет
И аналогий?
К нам приближался год лисы -
Барыш и рента.
Настали трудные часы
Для континента.
Идти назад или вперед?
Раззор и свара...
Одна поэзия не врет,
Не врет гитара!
А маг работал, сколько мог,
Кренясь кассетой.
Я слышал плач, я слышал вздох
И смех поэта.
АЙНУ
Мы познакомились с Вами случайно.
Вас окружала военная тайна.
Звали Вас Аня, а может быть, Айну.
Вы сохраняли военную тайну.
Темный забор, заводская окраина.
Ваша рука, как военная тайна...
Где вы сегодня, в эпоху дизайна?
С Вами ли Ваша военная тайна?
ХИРУРГИЯ-92
Бабы лежат со своими проблемами...
Им бы цвести, наслаждаться поэмами,
Да на Морском торговать хризантемами,
Да в институтах работать над темами,
Как предусмотрено нашими генами,
А не сидеть за копчеными стенами,
Не заниматься семейными сценами,
Да не следить за текущими ценами,
Да не сгибаться вечерними сменами.
Им бы остаться Татьянами, Ленами,
Светлым лицом, золотыми коленами,
Чтобы мужья их смотрелись джентльменами,
А сыновья вырастали спортсменами,
И увлекались Стругацкими, Лемами.
...Бабы лежат со своими проблемами.
ПОДЗЕМНЫЙ ПЕРЕХОД
Все-таки, граждане, что происходит?
Столько зачем человек в переходе?
Им, что ли, не к чему больше стремиться.
Кроме как здесь, в переходе, ютиться?
Видно, проблема сейчас с идеалом,
Вот почему здесь народа навалом.
Нечем, наверное, людям заняться,
Вот в переходах они и толпятся.
Тот представляется нищей старухой,
Тот за бесценок торгует порнухой,
Этот, поправив уздечку и стремя,
Вдаль устремился в рабочее время.
Очередь вьется, как анаконда,
Здесь собираются люди бомонда.
Голая женщина в пол-огорода -
Новый журнал для простого народа.
На развороте - грудастая дива.
С вами все ясно - шедевр детектива.
Тем, у кого не хватает познаний -
Полная пачка масонских изданий.
Что назвалось метрополитеном,
Спущено с рельс по коммерческим ценам.
 Эти вагоны сиреневой стали
Стали притоном и погребом стали.
Гордость Москвы - голубой эскалатор -
Приватизировал кооператор
Кооперировал эксплуататор,
Экспроприировал приватизатор.
Эта клоака, эта помойка -
Все, что народу дала перестройка?
Девочка эта, эта былинка
Есть воплощенье свободного рынка?
Нищий в остатках былой униформы -
Оруженосец и рыцарь реформы?
Милый народ, дорогие старушки,
Все, кто живет от получки к полушке.
Не выставляйте на улицу ушки -
С неба на вас не посыпятся плюшки.
Жили вы плохо, станете - хуже.
Только невежда имеет надежду.
Так что ремни затяните потуже,
Номера на три ушейте одежду.
Тем, кто сегодня встает у кормушек.
Не до, простите, конкретных старушек,
Им бы, вертясь у московских вертушек,
Только не съехать с последних катушек.
Милый народ! Это вам не игрушки.
Не уподобьтесь коту на комоде -
Приберегайте ушанки и кружки -
Вам пригодятся они в переходе,
Где по соседству с голодной старухой
Юная сволочь торгует порнухой.
ОДНОКЛАССНИЦА
Я знал ее еще резвушкой -
Теперь встречаюсь со старушкой.
В сорок четвертом мы картошку
Садили вместе понемножку.
Нас не сломили нибелунги,
И мы бросали клубни в лунки!
Эпоха минула, полвека,
Почти как целых полпарсека.
И снова в бой зовет эпоха.
И значит - в ход пошла картоха.
Зажав подмышкою лукошко,
Бросаю в лунки я картошку.
Опять хожу в штанах протертых,
Как в боевых сорок четвертых.
И мне оплотом и гарантом
Мой школьный класс, где с синим бантом
Одна знакомая старушка
На ножке прыгает, резвушка.,
И где до окончанья века
Нам оставалось полпарсека.
x x x
Совсем другие тяготы, совсем другие льготы.
Совсем другая правда, совсем другая ложь.
Ну что ты пригорюнился, считаешь деньги что ты?
Взгляни из сорок третьего и сразу все поймешь.

Взгляни из крематория, из стынущего Питера.,
Из стонущего лагеря с колымских берегов:
Не тле, не инфузории - сломали шею Гитлеру.
И грешниками прожили в раю большевиков.

Совсем другие тяготы на головы обрушены,
Совсем другие праздники несутся по стране.
Закопано - раскопано, построено - разрушено,
А мы, как те разведчики, остались на войне.

Ну что ты пригорюнился, мол, денег нет на ягоды?..
Считать, сержант, пора нам не деньги, а деньки.
Пусть катятся на головы сегодняшние тяготы,
А души и бумажники останутся легки!
x x x
Так что мы имеем в итоге?
Куда нас ведут демагоги?
Убоги они и безроги,
И сами нс знают дороги.

Приспущены красные флаги.
Телеги сползают в овраги.
Бараки темнеют во мраке,
Собаки готовы к атаке.

Не видят народные муки,
Молчат корифеи науки.
Какие же все-таки суки!
Пора им откручивать руки.

Что скажут нам дети и внуки
И будут ли брать на поруки?
Замолкли вечерние звуки,
И близится время базуки.

А завтра, на стыке столетий,
Что скажут вчерашние дети?
 ...В овраги сползают телеги.
Куда завели нас стратеги?
ВЫБОР
Спасайте тех, кто помоложе. Поите теплым молоком.
И кто еще родиться сможет, но нам пока что незнаком.
Спасайте юных и беспечных. Себя спасайте в их лице.
Таких веселых, бессердечных, с улыбкой смуглой на лице.
 А остальных спасать не надо - их легион. Им имя - рать!
 От Бреста и до Сталинграда они умели умирать...
О Тунгусском метеорите и его исследователях:
 Tunguska Meteorite Paradox (1908-1998)
 
Tunguska
 
Книга "Тунгусское Диво"
Популярность: 32, Last-modified: Thu, 26 Nov 1998 20:18:44 GMTСодержание
Fine HTML
Printed version
txt(Word,КПК)
Lib.ru html
Netscape undocumented fiatures
http://www.yikes.com/fun/netscape/cache.html 
http://www.yikes.com/fun/netscape/present.html
Please note some things are not links because Netscape's solution to JavaScript bugs is to deny links to go to "special" documents.
Debug JavaScript
 Netscape 2.0
To get a JavaScript debugger with a entry field for entering data, point your netscape do mocha:, javascript: or livescript:.
Another thing you can do is mocha:<JavaScript code here>, for example mocha:window.alert('Hi!')
Super Reload Netscape 2.0
In case Netscape's plain reload button isn't enough to solve your reloading problems, try Super Reload.  Hold the modifier key (Mac: Option, Win/X: Alt? or Shift?) and choose reload.  On the Macintosh version the Reload option in the menu will change names.
Display all files in cache Netscape 2.0
Open up the url about:cache and be prepared to wait as it searches through your disk cache.
Display all files in memory Netscape 2.0
When you go to about:memory-cache it will display items currently loaded in memory.
Display all cached images Netscape 2.0
Going to about:image-cache will dispaly all imags currently stored in cache.
Check out the Global History file Netscape 2.0
about:global will show all the places you have visited and when.
I can't decide where to go... X Netscape 2.0
montulli: will send you off somewhere on the web, based on your Global History file.
Presentation Features
Original of this document is at

http://www.yikes.com/netscape/present.html

Features dealing with how Netscape renders html pages
Full Screen Mac Netscape 3.0+
    
 You can make the Netscape window go full screen (even hide the
menu bar) by holding control + option then hitting the a key.
Very usefull! 
View Source
    
You can view the source of any url (even of gif images!) using the syntax view-source:>URL<. For example, try view-source:http://www.yikes.com/ .
Hide and Show scroll bars Mac Netscape 2.0
    
Type Control-Option-h to hide scroll bar in current frame or window.  Type Control-Option-j to show the scroll bar again.
Toggle Show URL Netscape 1.1
    
For Unix or Windows type Control-Alt-l and on Mac Control-Option-l.
Hide the Status Bar Netscape 1.1
    
Type Control-Alt-s (Control-Option-s on Mac) to toggle
whether or not the bottom status bar is shown.
Refresh Mac? Netscape 3.0+
    
Type control-option-s. Refreshes all open Netscape windows.
Hide the Status Bar Max Netscape 2.0
    
Yupe Control-Option-s.  Close the window.  Open a new window.
The status bar will be hidden.  Repeat to show it again.
Show Transfer Status X/Windows Netscape
    
Typing Control-Alt-t will pop up a new window with some
information.
Super-Short URLs Netscape 2.0
    
Tired of typing "http://www.yikes.com/"?
Well all you have to do is type "yikes" and hit return. It will automaticly
turn it into it's full url!  This only works for sites in the form
www.site.com.  Another neat feature is that you can add a
path name to the end, thus you can get this page by trying
yikes/fun/netscape/.
Tricks with Macintosh Netscape
Original of this page is here

To  call  up the Fish Cam were CTRL+OPT+Return (CTRL+ALT+F on a
PC). After some experimenting I found that CTRL+OPT+F  has  the
same  result.   window to take over my entire monitor, not even
leaving the Finder menu bar or  Netscape's  title  bar  on  the
screen. This seemed like it could be useful, and I was obsessed
until I could duplicate his pounding, which in  this  case  was
hitting  CTRL+OPT+A.  Pressing  the same keys again reduced the
window back to normal. This was just the beginning.

 After  an extensive session of my own keyboard pounding I came
up with the following tricks. A few have  a  PC  equivalent  by
substituting the ALT key for the OPT key.

 CTRL+OPT+HOME  does  the  same  thing  with  the  screen  that
CTRL+OPT+A does.


 CTRL+OPT+M yet again takes you to the Netscape Fish Cam.

 If  you want to pay a quick visit to the White house site type
CTRL+OPT+W.  CTRL+OPT+L  hides  the  vertical  scroll  bar  and
CTRL+OPT+K  hides  the  horizontal  scroll bar (CTRL+ALT+S on a
PC).

 CTRL+OPT+H  or  CTRL+OPT+Delete  hides  both  scroll  bars and
CTRL+OPT+J returns any hidden  scroll  bars.  To  refresh  your
screen use CTRL+OPT+S.

      By using about: command in the "Open Location" dialog box
you can find out detailed information about  your  browser  and
about  Netscape.  But  be  prepared  for a long wait if you run
about:cache or about:global with large disk  caches  or  global
history files.

 about:cache returns information about your disk cache,

 about:memory-cache  delivers  information  about  your  memory
cache,

 about:plugins lists your installed plug-ins,

 about:image-cache lists your




      Typing about: in the URL space tells you what version you
have, and if you click on the Netscape logo there you can see a
little boasting by the folks in Mountain View.

       The  about:  command also supports HTML on the PC -- for
instance about:
Bruce
 -- and does  something  silly  on
the Mac if you type in an undefined command (try about:yomama).

       A  few  about:  commands  worked in previous versions of
Netscape  but  seem  to  be  phased  out  now.  In  particular,
about:authors  and  about:photo  used to bring up some goodies,
but they're gone in 3.0.

       Finally,  for a historical reference type about:mozilla.
This is particularly impressive in the X version where you  see
an  animated  Mozilla  breathing  fire  in place of the regular
Netscape shooting star.

       In  addition  to  the  about: feature, you may also type
"view-source:anyURL" in the location field to view  the  source
of any HTML document.
Популярность: 14, Last-modified: Thu, 06 Feb 1997 06:53:50 GMTСодержание
Fine HTML
Printed version
txt(Word,КПК)
Lib.ru html
Пара слов про SCSI-адаптеры
SCSI   Small   Computer   System   Interface  -  интерфейс  для
подключения к компьютеру внешних периферийных устройств.

SCSI-шина   имеет  8-бит  для  передачи  данных,  50  проводов,
ограничение длины 3(?)метра, позволяет подключать 8 устройств с
номерами  (SCSI-ID)  0-7. Обычно host-адаптер имеет ID 7 (самый
высоким   приоритетом).   Итого   к    компьютеру    на    один
SCSI-контроллер можно подключить 7 внешних устройств.

Широкая  SCSI-шина  (Wide) имеет 16-бит для передачи данных, 68
проводов, ограничение длины 1.5(?) метра, позволяет  подключать
16  устройств  с номерами (SCSI ID) 0-15. Итого к компьютеру на
один  Wide  SCSI-контроллер   можно   подключить   15   внешних
устройств.

Все 16-битные контроллеры (как host-адаптеры, так и контроллеры
SCSI-устройств) умеют работать в 8-битном  режиме  по  8-битной
шине (50 проводов)

Если  в середине "широкого" 68-проводного шлейфа стоит 8-битное
устройство, то все устройства подключенные физически "следом за
ним"  будут  висеть  уже  на  50-проводной SCSI 8-мибитной шине
(естественно  скорость  обмена  со  всеми  этими   устройствами
снижается вдвое).
Narrow SCSI
Или просто SCSI-1

Шина данных             8 бит
Частота шины            5 MHz
Скорость обмена по шине 5 Мбайт/с
Коннектор               50 pin
Wide SCSI
Или просто SCSI-2. Расширена в 2 раза шина данных.

Шина данных             16 бит
Частота шины             5 MHz
Скорость обмена по шине 10 Мбайт/с
Коннектор               68 pin
Fast SCSI
Или просто SCSI-3. Увеличена в 2 раза тактовая частота шины.

Шина данных             16-бит
Частота шины            10 MHz
Скорость обмена по шине 20 Мбайт/с
Коннектор               68 pin
Ultra SCSI
Или  просто SCSI-4 (Он же Fast-20 и Fast-40). Еще раз увеличена
в 2 раза тактовая частота шины.

Шина данных             16-бит
Частота шины            20 MHz
Скорость обмена по шине 40 Мбайт/с
Коннектор               68 pin для 8 16битных устройств
Коннектор               50 pin для 7  8битных устройств - итого 15
Популярность: 26, Last-modified: Tue, 17 Sep 1996 06:56:02 GMTв файле   sys

call-local-size 500000 Any
call-remote-size 500000 Any
called-local-size 500000 Any
called-remote-size 500000 Any

ограничения на размер, хотя их ведь не должно быть!!!!!!!!!!!!!
Популярность: 21, Last-modified: Sat, 08 Apr 1995 12:22:33 GMTСодержание
Fine HTML
Printed version
txt(Word,КПК)
Lib.ru html
Конфигурирование automount-демона
Авто-монтировщик  -   демон,  запущенный  на  NFS-клиенте. Этот
демон монтирует  удаленные  каталоги "ПО  ТРЕБОВАНИЮ"  -  т.е.,
когда    к  ним  происходит  обращение.  Если  к  автоматически
смонтированному   каталогу    долго    не    было    обращений,
автомонтировщик  его автоматически отмонтирует.

Авто-монтирование поддерживается демоном automountd. Этот демон
запускается   при  начальной  загрузке   операционной  системы.
Запускается он в командном файле

    /etc/rc2.d/S20nfs.client

     automountd          #  если все карты будут браться из NIS
       или
     automountd -m -f /etc/auto.master   # брать только локальные
                                         # карты

Управляется automountd несколькими "картами" - файлами с описа-
нием кого и куда надо  монтировать.  В  простейшем случае нужно
иметь три файла:

/etc/auto_master     - головной конфигурационный файл

               Ссылается на:
/etc/auto_direct     - указывает, какие каталоги куда монтировать

/etc/auto_home       - задает правила монтирования домашних
                       каталогов пользователей, расположенных на
                       удаленных машинах.

/etc/auto_master :---------------------------------------------
#
# Master map for automounter
#
/net        -hosts
# задает: корневой каталог компьютера по имени imyarek монтиро-
# вать на каталог       /net/imyarek
#
/-          /etc/auto_direct
/home       /etc/auto_home


/etc/auto_direct :---------------------------------------------
#
#
/usr/informix    -ro,soft    classic00:/usr/informix
/usr/local       -rw,soft    classic00:/usr/local
#
#      Смонтировать с первого откликнувшегося сервера.
#
/usr/share/man   -ro,soft    classic00:/usr/share/man \
                 -ro,soft    sun21:/usr/share/man \
                 -ro,soft    sun22:/usr/share/man


/etc/auto_home :---------------------------------------------
moshkow           s08:/udd/moshkow
leo               classic00:/export/home/leo
# а лучше написать так:
*                 classic00:/export/home/&
*                 sun21:/export/home/&

Каждый пользователь polxzowatelx на этой машине должен быть за-
регистрирован с домашним каталогом /home/polxzowatelx
Популярность: 24, Last-modified: Tue, 26 Aug 2003 12:26:02 GMTСодержание
Fine HTML
Printed version
txt(Word,КПК)
Lib.ru html
HP MC/ServiceGuard
Подготовка VG
Раздавать SCSI-ID - хостадаптерам старшие (7,6,5...)
ДИскам - поменьше, в порядке убывания приоритета (2,1,15,14,13...)


Название группы: vg[порядковый номер группы][номер стартового узла]
Минор - совпадающий с названием. 0x0[номер группы][номер узла]000
первый разряд - обязан быть 0, второй - у всех должен быть разным

mkdir /dev/vg31
mknod /dev/vg31/group c 64 0x031000
vgcreate /dev/vg31/group /dev/dsk/c1t8d0 /dev/dsk/c1t9d0

Экспорт группы на другой узел кластера

vhchange -a n /dev/vg31 # Отключить, иначе не экспортирует
vgexport -s -p -m /tmp/vg31 /dev/vg31
  -s - группа будет shared
  -p - preview (оставить оригинал на мете)
  -m mapfile
rcp /tmp/vg31 node2:/tmp/vg31
rlogin node2
mkdir /dev/vg31
mknod /dev/vg31/group c 64 0x031000
vgimport -s -m /tmp/vg31 /dev/vg31

vgchange -c y /dev/vg31 # Отдать кластеру
vhchange -a e /dev/vg31 # Активировать vg монопольно
vhchange -a n /dev/vg31 # Отключить

vgchange -c n /dev/vg31 # Забрать у кластера
vhchange -a y /dev/vg31 # Активировать vg немонопольно


Komandy:

/usr/sbin/cm*

Generaciya konfigura

cd /etc/cmcluster

Wpisat' spisok uzlow w fajl
/etc/cmcluster/cmclnodelist
mos032
mos034


klaster
nodes
packages
services - programma, za nalichiem kotoroj klaster sledit.
Perezapuskaet, skol'ko zakazano raz, esli ona umerla -
paketu delaetsya halt, i on restartuetsya na nowom uzle.
Esli w washem pakete net programm, kotorye startuyut w foregraunde,
nado napisat' programmku monitor - kotoraya sama za nimi sledit,

i swom okonchaniembudet goworit' klasteru - paket nado gasit'



/usr/sbin/cmquerycl -C jj -n mos032 -n mos034

# **********************************************************************
# ********* HIGH AVAILABILITY CLUSTER CONFIGURATION FILE ***************
# ***** For complete details about cluster parameters and how to    ****
# ***** set them, consult the cmquerycl(1m) manpage or your manual. ****
# **********************************************************************

# Enter a name for this cluster.  This name will be used to identify the
# cluster when viewing or manipulating it.

CLUSTER_NAME  cluster1


# Cluster Lock Device Parameters.  This is the volume group that
# holds the cluster lock which is used to break a cluster formation
# tie.  This volume group should not be used by any other cluster
# as cluster lock device.

FIRST_CLUSTER_LOCK_VG  /dev/vg03


# Definition of nodes in the cluster.
# Repeat node definitions as necessary for additional nodes.

NODE_NAME  mos032
  NETWORK_INTERFACE lan0
    HEARTBEAT_IP  15.188.208.32
  NETWORK_INTERFACE lan1
  FIRST_CLUSTER_LOCK_PV /dev/dsk/c1t9d0
# List of serial device file names
# For example:
# SERIAL_DEVICE_FILE /dev/tty0p0

# Possible standby Network Interfaces for lan0: lan1.

NODE_NAME  mos034
  NETWORK_INTERFACE lan0
    HEARTBEAT_IP  15.188.208.34
  NETWORK_INTERFACE lan1
  FIRST_CLUSTER_LOCK_PV /dev/dsk/c0t9d0
# List of serial device file names
# For example:
# SERIAL_DEVICE_FILE /dev/tty0p0

# Possible standby Network Interfaces for lan0: lan1.


# Cluster Timing Parmeters (microseconds).

HEARTBEAT_INTERVAL  1000000
NODE_TIMEOUT  2000000


# Configuration/Reconfiguration Timing Parameters (microseconds).

AUTO_START_TIMEOUT 600000000
NETWORK_POLLING_INTERVAL 2000000

# Package Configuration Parameters.
# Enter the maximum number of packages which will be configured in the cluster.
# You can not add packages beyond this limit.
# This parameter is required.
MAX_CONFIGURED_PACKAGES  0



# List of cluster aware Volume Groups. These volume groups will
# be used by package applications via the vgchange -a e command.
# For example:
# VOLUME_GROUP  /dev/vgdatabase.
# VOLUME_GROUP  /dev/vg02.

VOLUME_GROUP  /dev/vg03




cmmakepkg -s paket1.sh
cmmakepkg -p paket1.conf


# **********************************************************************
# ****** HIGH AVAILABILITY PACKAGE CONFIGURATION FILE (template) *******
# **********************************************************************
# ******* Note: This file MUST be edited before it can be used. ********
# * For complete details about package parameters and how to set them, *
# * consult the MC/ServiceGuard or MC/LockManager manpages or manuals. *
# **********************************************************************

# Enter a name for this package.  This name will be used to identify the
# package when viewing or manipulating it.  It must be different from
# the other configured package names.

PACKAGE_NAME


# Enter the failover policy for this package. This policy will be used
# to select an adoptive node whenever the package needs to be started.
# The default policy unless otherwise specified is CONFIGURED_NODE.
# This policy will select nodes in priority order from the list of
# NODE_NAME entries specified below.
#
# The alternative policy is MIN_PACKAGE_NODE. This policy will select
# the node, from the list of NODE_NAME entries below, which is
# running the least number of packages at the time this package needs
# to start.

FAILOVER_POLICY   CONFIGURED_NODE


# Enter the failback policy for this package. This policy will be used
# to determine what action to take when a package is not running on
# its primary node and its primary node is capable of running the
# package. The default policy unless otherwise specified is MANUAL.
# The MANUAL policy means no attempt will be made to move the package
# back to its primary node when it is running on an adoptive node.
#
# The alternative policy is AUTOMATIC. This policy will attempt to
# move the package back to its primary node whenever the primary node
# is capable of running the package.

FAILBACK_POLICY   MANUAL


# Enter the names of the nodes configured for this package.  Repeat
# this line as necessary for additional adoptive nodes.
# Order IS relevant.  Put the second Adoptive Node AFTER the first
# one.
# Example : NODE_NAME  original_node
#           NODE_NAME  adoptive_node

NODE_NAME


# Enter the complete path for the run and halt scripts.  In most cases
# the run script and halt script specified here will be the same script,
# the package control script generated by the cmmakepkg command.  This
# control script handles the run(ning) and halt(ing) of the package.
# If the script has not completed by the specified timeout value,
# it will be terminated.  The default for each script timeout is
# NO_TIMEOUT.  Adjust the timeouts as necessary to permit full
# execution of each script.
# Note: The HALT_SCRIPT_TIMEOUT should be greater than the sum of
# all SERVICE_HALT_TIMEOUT specified for all services.

RUN_SCRIPT
RUN_SCRIPT_TIMEOUT  NO_TIMEOUT
HALT_SCRIPT
HALT_SCRIPT_TIMEOUT  NO_TIMEOUT


# Enter the SERVICE_NAME, the SERVICE_FAIL_FAST_ENABLED and the
# SERVICE_HALT_TIMEOUT values for this package.  Repeat these
# three lines as necessary for additional service names.  All
# service names MUST correspond to the service names used by
# cmrunserv and cmhaltserv commands in the run and halt scripts.
#
# The value for SERVICE_FAIL_FAST_ENABLED can be either YES or
# NO.  If set to YES, in the event of a service failure, the
# cluster software will halt the node on which the service is
# running.  If SERVICE_FAIL_FAST_ENABLED is not specified, the
# default will be NO.
#
# SERVICE_HALT_TIMEOUT is represented in the number of seconds.
# This timeout is used to determine the length of time (in
# seconds) the cluster software will wait for the service to
# halt before a SIGKILL signal is sent to force the termination
# of the service.  In the event of a service halt, the cluster
# software will first send a SIGTERM signal to terminate the
# service.  If the service does not halt, after waiting for the
# specified SERVICE_HALT_TIMEOUT, the cluster software will send
# out the SIGKILL signal to the service to force its termination.
# This timeout value should be large enough to allow all cleanup
# processes associated with the service to complete.  If the
# SERVICE_HALT_TIMEOUT is not specified, a zero timeout will be
# assumed, meaning the cluster software will not wait at all
# before sending the SIGKILL signal to halt the service.
#
# Example: SERVICE_NAME                   DB_SERVICE
#          SERVICE_FAIL_FAST_ENABLED      NO
#          SERVICE_HALT_TIMEOUT           300
#
# To configure a service, uncomment the following lines and
# fill in the values for all of the keywords.
#
#SERVICE_NAME                   
#SERVICE_FAIL_FAST_ENABLED      
#SERVICE_HALT_TIMEOUT           


# Enter the network subnet name that is to be monitored for this package.
# Repeat this line as necessary for additional subnet names.  If any of
# the subnets defined goes down, the package will be switched to another
# node that is configured for this package and has all the defined subnets
# available.

#SUBNET


# The following keywords (RESOURCE_NAME, RESOURCE_POLLING_INTERVAL, and
# RESOURCE_UP_VALUE) are used to specify Package Resource Dependencies.  To
# define a Package Resource Dependency, a RESOURCE_NAME line with a fully
# qualified resource path name, and one or more RESOURCE_UP_VALUE lines are
# required.  A RESOURCE_POLLING_INTERVAL line (how often in seconds the resource
# is to be monitored) is optional and defaults to 60 seconds.  An operator and
# a value are used with RESOURCE_UP_VALUE to define when the resource is to be
# considered up.  The operators are =, !=, >, <, >=, and <=, depending on the
# type of value.  Values can be string or numeric.  If the type is string, then
# only = and != are valid operators.  If the string contains whitespace, it
# must be enclosed in quotes.  String values are case sensitive.  For example,
#
#      Resource is up when its value is
#      --------------------------------
#  RESOURCE_UP_VALUE = UP   "UP"
#  RESOURCE_UP_VALUE != DOWN   Any value except "DOWN"
#  RESOURCE_UP_VALUE = "On Course"  "On Course"
#
# If the type is numeric, then it can specify a threshold, or a range to
# define a resource up condition.  If it is a threshold, then any operator
# may be used.  If a range is to be specified, then only > or >= may be used
# for the first operator, and only < or <= may be used for the second operator.
# For example,
#      Resource is up when its value is
#      --------------------------------
#  RESOURCE_UP_VALUE     = 5  5      (threshold)
#  RESOURCE_UP_VALUE     > 5.1  greater than 5.1    (threshold)
#  RESOURCE_UP_VALUE     > -5 and < 10 between -5 and 10   (range)
#
# Note that "and" is required between the lower limit and upper limit
# when specifying a range.  The upper limit must be greater than the lower
# limit.  If RESOURCE_UP_VALUE is repeated within a RESOURCE_NAME block, then
# they are inclusively OR'd together.  Package Resource Dependencies may be
# defined by repeating the entire RESOURCE_NAME block.
#
# Example : RESOURCE_NAME               /net/interfaces/lan/status/lan0
#      RESOURCE_POLLING_INTERVAL 120
#      RESOURCE_UP_VALUE  = RUNNING
#      RESOURCE_UP_VALUE  = ONLINE
#
#           Means that the value of resource /net/interfaces/lan/status/lan0
#           will be checked every 120 seconds, and is considered to
#           be 'up' when its value is "RUNNING" or "ONLINE".
#
# Uncomment the following lines to specify Package Resource Dependencies.
#
#RESOURCE_NAME      
#RESOURCE_POLLING_INTERVAL  
#RESOURCE_UP_VALUE       [and  ]


# The default for PKG_SWITCHING_ENABLED is YES. In the event of a
# failure, this permits the cluster software to transfer the package
# to an adoptive node.  Adjust as necessary.

PKG_SWITCHING_ENABLED  YES


# The default for NET_SWITCHING_ENABLED is YES.  In the event of a
# failure, this permits the cluster software to switch LANs locally
# (transfer to a standby LAN card).  Adjust as necessary.

NET_SWITCHING_ENABLED  YES


# The default for NODE_FAIL_FAST_ENABLED is NO.  If set to YES,
# in the event of a failure, the cluster software will halt the node
# on which the package is running.  Adjust as necessary.

NODE_FAIL_FAST_ENABLED NO

cmcheckconf -C jj -P paket1.conf -P paket2.conf

Sozdanie gologo klastera

cmaplyconf -C jj
cmruncl
cmview -v
cmhaltnode mos032
cmrunnode mos032
cmhaltcl

Dobawlenie ili modifikaciya imeyushegosya paketa
cmcheckconf -P paket1.conf
cmaplyconf -P paket1.conf

Ah, da, wse skripty obyazatel'no kopirowat' po wsem uzlam klastera

cmhaltpkg paket1

posle ostanowki paket awtomaticheski disablitsq na uzle, de on umer,
dlq obratnogo enablirowaniq paketa:

cmmodpkg -e paket1
cmmodpkg -n mos032 -e paket1
cmmodpkg -n mos034 -e paket1

cmrunpkg  [ -n mos032 ] paket1


Prosmotr statusa klastera


CLUSTER      STATUS
karelia      up

  NODE         STATUS       STATE
  mos031       up           running

    Network_Parameters:
    INTERFACE    STATUS       PATH         NAME
    PRIMARY      up           8/16/6       lan0
    STANDBY      up           8/20/5/8     lan1

    PACKAGE      STATUS       STATE        PKG_SWITCH   NODE
    pkg28162     up           running      enabled      mos031

      Policy_Parameters:
      POLICY_NAME     CONFIGURED_VALUE
      Failover        configured_node
      Failback        automatic

      Script_Parameters:
      ITEM       STATUS   MAX_RESTARTS  RESTARTS   NAME
      Service    up                  3         0   qwerty
      Subnet     up                                15.188.208.0
      Resource   up                                /system/filesystem/availMb/home
      Resource   up                                /cluster/localNode/status/karelia

      Node_Switching_Parameters:
      NODE_TYPE    STATUS       SWITCHING    NAME
      Primary      up           enabled      mos031       (current)
      Alternate    up           enabled      mos033

  NODE         STATUS       STATE
  mos033       up           running

    Network_Parameters:
    INTERFACE    STATUS       PATH         NAME
    PRIMARY      up           8/16/6       lan0
    STANDBY      up           8/20/5/8     lan1

    PACKAGE      STATUS       STATE        PKG_SWITCH   NODE
    nc           starting     starting     enabled      mos033

      Policy_Parameters:
      POLICY_NAME     CONFIGURED_VALUE
      Failover        configured_node
      Failback        automatic

      Script_Parameters:
      ITEM       STATUS   MAX_RESTARTS  RESTARTS   NAME
      Service    up                  0         0   nc
      Subnet     up                                15.188.208.0
      Resource   up                                /system/filesystem/availMb/home

      Node_Switching_Parameters:
      NODE_TYPE    STATUS       SWITCHING    NAME
      Primary      up           enabled      mos033       (current)
      Alternate    up           enabled      mos031

udalenie paketa

cmdeleteconf -P paket2

/usr/sbin/cmapplyconf   /usr/sbin/cmhaltserv    /usr/sbin/cmrunnode
/usr/sbin/cmcheckconf   /usr/sbin/cmmakepkg     /usr/sbin/cmrunpkg
/usr/sbin/cmdeleteconf  /usr/sbin/cmmigrate     /usr/sbin/cmrunserv
/usr/sbin/cmgetconf     /usr/sbin/cmmodnet      /usr/sbin/cmscancl
/usr/sbin/cmhaltcl      /usr/sbin/cmmodpkg      /usr/sbin/cmviewcl
/usr/sbin/cmhaltnode    /usr/sbin/cmquerycl     /usr/sbin/cmviewconf
/usr/sbin/cmhaltpkg     /usr/sbin/cmruncl

Prosmotr debaga

tail -f /var/adm/syslog/syslog.log

tail -f /etc/cmcluster/paket1.sh.log


Obrashenie s resursami:

Prosmotret' spiski dostupnyh resursow
resls /net/interfaces/lan/status

prosmotret' ih znachenie ya ne znayu kak

poluchit' nastoyashie konfigurniki iz klastera

cmgetconf  -c cluster_name output_filename
cmgetconf  -p package_name output_filename
#"(#) A.11.05         $Revision: 82.3 $ $Date: 98/11/03 10:56:49 $"
# **********************************************************************
# *                                                                    *
# *        HIGH AVAILABILITY PACKAGE CONTROL SCRIPT (template)         *
# *                                                                    *
# *       Note: This file MUST be edited before it can be used.        *
# *                                                                    *
# **********************************************************************

# UNCOMMENT the variables as you set them.

# Set PATH to reference the appropriate directories.
PATH=/sbin:/usr/bin:/usr/sbin:/etc:/bin

# VOLUME GROUP ACTIVATION:
# Specify the method of activation for volume groups.
# Leave the default ("VGCHANGE="vgchange -a e") if you want volume
# groups activated in exclusive mode. This assumes the volume groups have
# been initialized with 'vgchange -c y' at the time of creation.
#
# Uncomment the first line (VGCHANGE="vgchange -a e -q n"), and comment
# out the default, if your disks are mirrored on separate physical paths,
#
# Uncomment the second line (VGCHANGE="vgchange -a e -q n -s"), and comment
# out the default, if your disks are mirrored on separate physical paths,
# and you want the mirror resynchronization to ocurr in parallel with
# the package startup.
#
# Uncomment the third line (VGCHANGE="vgchange -a y") if you wish to
# use non-exclusive activation mode. Single node cluster configurations
# must use non-exclusive activation.
#
# VGCHANGE="vgchange -a e -q n"
# VGCHANGE="vgchange -a e -q n -s"
# VGCHANGE="vgchange -a y"
VGCHANGE="vgchange -a e"  # Default

# VOLUME GROUPS
# Specify which volume groups are used by this package. Uncomment VG[0]=""
# and fill in the name of your first volume group. You must begin with
# VG[0], and increment the list in sequence.
#
# For example, if this package uses your volume groups vg01 and vg02, enter:
#         VG[0]=vg01
#         VG[1]=vg02
#
# The volume group activation method is defined above. The filesystems
# associated with these volume groups are specified below.
#
#VG[0]=""

# FILESYSTEMS
# Specify the filesystems which are used by this package. Uncomment
# LV[0]=""; FS[0]=""; FS_MOUNT_OPT[0]="" and fill in the name of your first
# logical volume, filesystem and mount option for the file system. You must
# begin with LV[0], FS[0] and FS_MOUNT_OPT[0] and increment the list in
# sequence.
#
# For example, if this package uses the file systems pkg1a and pkg1b,
# which are mounted on the logical volumes lvol1 and lvol2 with read and
# write options enter:
#          LV[0]=/dev/vg01/lvol1; FS[0]=/pkg1a; FS_MOUNT_OPT[0]="-o rw"
#          LV[1]=/dev/vg01/lvol2; FS[1]=/pkg1b; FS_MOUNT_OPT[1]="-o rw"
#
# The filesystems are defined as triplets of entries specifying the logical
# volume, the mount point and the mount options for the file system. Each
# filesystem will be fsck'd prior to being mounted. The filesystems will be
# mounted in the order specified during package startup and will be unmounted
# in reverse order during package shutdown. Ensure that volume groups
# referenced by the logical volume definitions below are included in
# volume group definitions above.
#
#LV[0]=""; FS[0]=""; FS_MOUNT_OPT[0]=""

# FILESYSTEM UNMOUNT COUNT
# Specify the number of unmount attempts for each filesystem during package
# shutdown.  The default is set to 1.
LV_UMOUNT_COUNT=1

# IP ADDRESSES
# Specify the IP and Subnet address pairs which are used by this package.
# Uncomment IP[0]="" and SUBNET[0]="" and fill in the name of your first
# IP and subnet address. You must begin with IP[0] and SUBNET[0] and
# increment the list in sequence.
#
# For example, if this package uses an IP of 192.10.25.12 and a subnet of
# 192.10.25.0 enter:
#          IP[0]=192.10.25.12
#          SUBNET[0]=192.10.25.0 # (netmask=255.255.255.0)
#
# Hint: Run "netstat -i" to see the available subnets in the Network field.
#
# IP/Subnet address pairs for each IP address you want to add to a subnet
# interface card.  Must be set in pairs, even for IP addresses on the same
# subnet.
#
#IP[0]=""
#SUBNET[0]=""

# SERVICE NAMES AND COMMANDS.
# Specify the service name, command, and restart parameters which are
# used by this package. Uncomment SERVICE_NAME[0]="", SERVICE_CMD[0]="",
# SERVICE_RESTART[0]="" and fill in the name of the first service, command,
# and restart parameters. You must begin with SERVICE_NAME[0], SERVICE_CMD[0],
# and SERVICE_RESTART[0] and increment the list in sequence.
#
# For example:
#          SERVICE_NAME[0]=pkg1a
#          SERVICE_CMD[0]="/usr/bin/X11/xclock -display 192.10.25.54:0"
#          SERVICE_RESTART[0]=""  # Will not restart the service.
#
#          SERVICE_NAME[1]=pkg1b
#          SERVICE_CMD[1]="/usr/bin/X11/xload -display 192.10.25.54:0"
#          SERVICE_RESTART[1]="-r 2"   # Will restart the service twice.
#
#          SERVICE_NAME[2]=pkg1c
#          SERVICE_CMD[2]="/usr/sbin/ping"
#          SERVICE_RESTART[2]="-R" # Will restart the service an infinite
#                                    number of times.
#
# Note: No environmental variables will be passed to the command, this
# includes the PATH variable. Absolute path names are required for the
# service command definition.  Default shell is /usr/bin/sh.
#
#SERVICE_NAME[0]=""
#SERVICE_CMD[0]=""
#SERVICE_RESTART[0]=""

# DTC manager information for each DTC.
# Example: DTC[0]=dtc_20
#DTC_NAME[0]=


# START OF CUSTOMER DEFINED FUNCTIONS

# This function is a place holder for customer define functions.
# You should define all actions you want to happen here, before the service is
# started.  You can create as many functions as you need.

function customer_defined_run_cmds
{
# ADD customer defined run commands.
: # do nothing instruction, because a function must contain some command.

 test_return 51
}

# This function is a place holder for customer define functions.
# You should define all actions you want to happen here, before the service is
# halted.

function customer_defined_halt_cmds
{
# ADD customer defined halt commands.
: # do nothing instruction, because a function must contain some command.
 test_return 52
}

# END OF CUSTOMER DEFINED FUNCTIONS


# START OF RUN FUNCTIONS


function activate_volume_group
{
for I in ${VG[@]}
do
 if [[ "${VGCHANGE}" = "vgchange -a y" ]]
 then
         print "$(date '+%b %e %X') - Node \"$(hostname)\": Activating volume group $I with non-exclusive option."
 else
         print "$(date '+%b %e %X') - \"$(hostname)\": Activating volume group $I with exclusive option."
 fi

 $VGCHANGE $I
 test_return 1

 # If the -s option has been specified, then we perform
 # the resynchronization as a background task
 #
 if [[ ${VGCHANGE#*-s} != ${VGCHANGE} ]]
 then
     {
  if /sbin/vgsync $I
  then
      print "$(date '+%b %e %X') - Node \"$(hostname)\": Resynchronized volume group $I"
  else
      print "$(date '+%b %e %X') - Node \"$(hostname)\": Resynchronization of volume group $I encountered an error"
  fi
     } &
 fi
done
}

# For each {file system/logical volume} pair, fsck the file system
# and mount it.

function check_and_mount
{
integer R=0

for I in ${LV[@]}
do
 if [[ $(mount -p | awk '$1 == "'$I'"') = "" ]]
 then
  RLV[$R]="${I%/*}/r${I##*/}"

             if [ -x /usr/sbin/fstyp ]
             then
                 fstype[$R]=$(fstyp $I)
  fi
  (( R = $R + 1 ))
 fi
done

# Verify that there is at least one file system to check and what type.
if [[ ${RLV[@]} != "" ]]
then
 print -n "$(date '+%b %e %X') - Node \"$(hostname)\": "
 print "Checking filesystems:"
 print ${LV[@]} | tr ' ' '\012' | sed -e 's/^/   /'

 # If there is more than one filesystem type being checked
 # then each filesystem is check individually.
 #
 R=$(print ${fstype[*]} | tr ' ' '\012' | sort -u | wc -l)
 if (( R > 1 ))
 then
     R=0
     while (( R < ${#RLV[*]} ))
     do
  case ${fstype[$R]} in

      hfs) fsck -F hfs -P ${RLV[$R]}
    test_return 2
    ;;

      vxfs) fsck -F vxfs -y ${RLV[$R]}
    test_return 2
    ;;

      unk*) fsck ${RLV[$R]}
    test_return 2
    ;;

      *)  if [[ ${fstype[$R]} = "" ]]
    then
        fsck ${RLV[$R]}
    else
        fsck -F ${fstype[$R]} ${RLV[$R]}
    fi
    test_return 2
    ;;
  esac
  (( R = R + 1 ))
     done

 # If there is only one filesystem type being checked, then
 # multiple invocations of fsck can be avoided. All filesystems
 # are specified on the command line to one fsck invocation.
 #
 else
     case ${fstype} in

  hfs) fsck -F hfs -P ${RLV[@]}
   test_return 2
   ;;

  vxfs) fsck -F vxfs -y ${RLV[@]}
   test_return 2
   ;;

  unk*) fsck ${RLV[@]}
   test_return 2
   ;;

  *) if [[ ${fstype} = "" ]]
   then
       fsck ${RLV[@]}
   else
       fsck -F ${fstype} ${RLV[@]}
   fi
   test_return 2
   ;;
     esac
 fi
fi

integer F=0
for I in ${LV[@]}
do
 if [[ $(mount | grep -e $I" ") = "" ]]
 then
  print "$(date '+%b %e %X') - Node \"$(hostname)\": Mounting $I at ${FS[$F]}"
  mount ${FS_MOUNT_OPT[$F]} $I ${FS[$F]}
  test_return 3
 else
  print "$(date '+%b %e %X') - Node \"$(hostname)\": WARNING:  File system \"${FS[$F]}\" was already mounted."
 fi
 (( F = $F + 1 ))
done
}

# For each {IP address/subnet} pair, add the IP address to the subnet
# using cmmodnet(1m).

function add_ip_address
{
integer S=0
integer error=0

for I in ${IP[@]}
do
 print "$(date '+%b %e %X') - Node \"$(hostname)\": Adding IP address $I to subnet ${SUBNET[$S]}"
 XX=$( cmmodnet -a -i $I ${SUBNET[$S]} 2>&1 )
 if (( $? != 0 ))
 then
                if [[ $(echo $XX | grep "heartbeat IP") != "" ]]
                then
                        # IP has been configured as a heartbeat IP address.
                        print "$XX" >> $0.log
                        (( error = 1 ))
                else
                        YY=$( netstat -in | awk '$4 == "'${I}'"')
                        if [[ -z $YY ]]
                        then
                                print "$XX" >> $0.log
                                print "\tERROR:  Failed to add IP $I to subnet ${SUBNET[$S]}"
                                (( error = 1 ))
                        else
                                print "\tWARNING:  IP $I is already configured on the subnet ${SUBNET[$S]}"
                        fi
                fi
 fi
 (( S = $S + 1 ))
done

if (( error != 0 ))
then

# `let 0` is used to set the value of $? to 1. The function test_return
# requires $? to be set to 1 if it has to print error message.

        let 0
        test_return 4
fi

}

# Own and reset the DTC connections

function get_ownership_dtc
{
for I in ${DTC_NAME[@]}
do
 print "$(date '+%b %e %X') - Node \"$(hostname)\": Assigning Ownership of the DTC $I"
 dtcmodifyconfs -o $I
 test_return 5

 for J in ${IP[@]}
 do
  print "$(date '+%b %e %X') - Node \"$(hostname)\": Resetting the DTC connections to IP address $J"
  dtcdiag -Q $J -q -f $I
  test_return 6
 done
done
}


# For each {service name/service command string} pair, start the
# service command string at the service name using cmrunserv(1m).

function start_services
{
integer C=0
for I in ${SERVICE_NAME[@]}
do
 print "$(date '+%b %e %X') - Node \"$(hostname)\": Starting service $I using"
 print "   \"${SERVICE_CMD[$C]}\""
            #
            # Check if cmrunserv should be called the old
            # way without a restart count.
            #
 if [[ "${SERVICE_RESTART[$C]}" = "" ]]
 then
     cmrunserv $I ">> $0.log 2>&1 ${SERVICE_CMD[$C]}"
 else
     cmrunserv ${SERVICE_RESTART[$C]} $I ">> $0.log 2>&1 ${SERVICE_CMD[$C]}"
 fi
 test_return 8
 (( C = $C + 1 ))
done
}

# END OF RUN FUNCTIONS.



# START OF HALT FUNCTIONS

# Halt each service using cmhaltserv(1m).

function halt_services
{
for I in ${SERVICE_NAME[@]}
do
 print "$(date '+%b %e %X') - Node \"$(hostname)\": Halting service $I"
 cmhaltserv $I
 test_return 9
done
}

# Disown the DTC.

function disown_dtc
{
for I in ${DTC_NAME[@]}
do
 print "$(date '+%b %e %X') - Node \"$(hostname)\": Disowning the DTC $I"
 dtcmodifyconfs -d $I
 test_return 11
done
}

# For each IP address/subnet pair, remove the IP address from the subnet
# using cmmodnet(1m).

function remove_ip_address
{
integer S=0
integer error=0

for I in ${IP[@]}
do
 print "$(date '+%b %e %X') - Node \"$(hostname)\": Remove IP address $I from subnet ${SUBNET[$S]}"
 XX=$( cmmodnet -r -i $I ${SUBNET[$S]} 2>&1 )
 if (( $? != 0 ))
 then
  echo $XX | grep "is not configured on the subnet"
  if (( $? != 0 ))
  then
   print "$XX" >> $0.log
   (( error = 1 ))
  fi
 fi
 (( S = $S + 1 ))
done
if (( $error != 0 ))
then

# `let 0` is used to set the value of $? to 1. The function test_return
# requires $? to be set to 1 if it has to print error message.

 let 0
 test_return 12
fi
}

# Unmount each logical volume.

function umount_fs
{
integer UM_CNT=${LV_UMOUNT_COUNT:-1}

if [[ $UM_CNT < 1 ]]
then
   UM_CNT=1
fi

for I in $(print ${LV[@]} | awk '{ for(i=NF; i>0; i--) print $i }')
do
 mount | grep -e $I" " > /dev/null 2>&1
 if (( $? == 0 ))
 then
  print "$(date '+%b %e %X') - Node \"$(hostname)\": Unmounting filesystem on $I"
  print "\tWARNING:   Running fuser to remove anyone using the file system directly."
  UM_COUNT=$UM_CNT
  while (( $UM_COUNT > 0 ))
  do
  fuser -ku $I
  umount $I
  if (( $? == 0 ))
  then
   (( UM_COUNT = 0 ))
  else
   if (( $UM_COUNT == 1 ))
   then
    let 0
    test_return 13
   fi
   (( UM_COUNT = $UM_COUNT - 1 ))
   sleep 1
   if (( $UM_COUNT > 0 ))
   then
    print "\t$(date '+%b %e %X') - Unmount failed, trying again."
   fi
  fi
  done
 fi
done
}


function deactivate_volume_group
{
for I in ${VG[@]}
do
 print "$(date '+%b %e %X') - Node \"$(hostname)\": Deactivating volume group $I"
 vgchange -a n $I
 test_return 14
done
}

# END OF HALT FUNCTIONS.

# FUNCTIONS COMMON TO BOTH RUN AND HALT.

# Test return value of functions and exit with NO RESTART if bad.
# Return value of 0 - 50 are reserved for use by Hewlett-Packard.
# System administrators can use numbers above 50 for return values.
function test_return
{
if (( $? != 0 ))
then
 case $1 in
  1)
  print "\tERROR:  Function activate_volume_group"
  print "\tERROR:  Failed to activate $I"
  deactivate_volume_group
  exit 1
  ;;

  2)
  print "\tERROR:  Function check_and_mount"
  print "\tERROR:  Failed to fsck one of the logical volumes."
  exit_value=1
  ;;

  3)
  print "\tERROR:  Function check_and_mount"
  print "\tERROR:  Failed to mount $I to ${FS[$F]}"
  umount_fs
  deactivate_volume_group
  exit 1
  ;;

  4)
  print "\tERROR:  Function add_ip_address"
  print "\tERROR:  Failed to add IP address to subnet"
  remove_ip_address
  umount_fs
  deactivate_volume_group
  exit 1
  ;;

  5)
  print "\tERROR:  Function get_ownership_dtc"
  print "\tERROR:  Failed to own $I"
  disown_dtc
  remove_ip_address
  umount_fs
  deactivate_volume_group
  exit 1
  ;;

  6)
  print "\tERROR:  Function get_ownership_dtc"
  print "\tERROR:  Failed to switch $I"
  disown_dtc
  remove_ip_address
  umount_fs
  deactivate_volume_group
  exit 1
  ;;

  8)
  print "\tERROR:  Function start_services"
  print "\tERROR:  Failed to start service ${SERVICE_NAME[$C]}"
  halt_services
  customer_defined_halt_cmds
  disown_dtc
  remove_ip_address
  umount_fs
  deactivate_volume_group
  exit 1
  ;;

  9)
  print "\tFunction halt_services"
  print "\tWARNING: Failed to halt service $I"
  ;;

  11)
  print "\tERROR:  Function disown_dtc"
  print "\tERROR:  Failed to disown $I from ${SUBNET[$S]}"
  exit_value=1
  ;;

  12)
  print "\tERROR:  Function remove_ip_address"
  print "\tERROR:  Failed to remove $I"
  exit_value=1
  ;;

  13)
  print "\tERROR:  Function umount_fs"
  print "\tERROR:  Failed to unmount $I"
  exit_value=1
  ;;

  14)
  print "\tERROR:  Function deactivate_volume_group"
  print "\tERROR:  Failed to deactivate $I"
  exit_value=1
  ;;

  51)
  print "\tERROR:  Function customer_defined_run_cmds"
  print "\tERROR:  Failed to RUN customer commands"
  halt_services
  customer_defined_halt_cmds
  disown_dtc
  remove_ip_address
  umount_fs
  deactivate_volume_group
  exit 1
  ;;

  52)
  print "\tERROR:  Function customer_defined_halt_cmds"
  print "\tERROR:  Failed to HALT customer commands"
  exit_value=1
  ;;

  *)
  print "\tERROR:  Failed, unknown error."
  ;;
 esac
fi
}

# END OF FUNCTIONS COMMON TO BOTH RUN AND HALT

#-------------------MAINLINE Control Script Code Starts Here-----------------
#
# FUNCTION STARTUP SECTION.

typeset MIN_VERSION="A.10.03"  # Minimum version this control script works on

integer exit_value=0
typeset CUR_VERSION

#
# Check that this control script is being run on a A.10.03 or later release
# of MC/ServiceGuard or MC/LockManager.  The control scripts are forward
# compatible but are not backward compatible because newer control
# scripts use commands and option not available on older releases.

CUR_VERSION="$(/usr/bin/what /usr/lbin/cmcld | /usr/bin/grep "Date" | \
                            /usr/bin/egrep '[AB]\...\...|NTT\...\...' | \
       cut -f2 -d" ")"

if [[ "${CUR_VERSION}" = ""  ]] || \
                              [[ "${CUR_VERSION#*.}" < "${MIN_VERSION#*.}" ]]
then
    print "ERROR:  Mismatched control script version ($MIN_VERSION).  You cannot run"
    print "\ta version ${MIN_VERSION} control_script on a node running pre"
    print "\t${MIN_VERSION} MC/ServiceGuard or MC/LockManager software"
    exit 1
fi

# Test to see if we are being called to run the package, or halt the package.

if [[ $1 = "start" ]]
then
 print "\n\t########### Node \"$(hostname)\": Starting package at $(date) ###########"

 activate_volume_group

 check_and_mount

 add_ip_address

 get_ownership_dtc

 customer_defined_run_cmds

 start_services


# Check exit value

 if (( $exit_value == 1 ))
 then
  print "\n\t########### Node \"$(hostname)\": Package start failed  at $(date) ###########"
  exit 1
 else
  print "\n\t########### Node \"$(hostname)\": Package start completed  at $(date) ###########"
  exit 0
 fi

elif [[ $1 = "stop" ]]
then
 print "\n\t########### Node \"$(hostname)\": Halting package at $(date) ###########"


 halt_services

 customer_defined_halt_cmds

 disown_dtc

 remove_ip_address

 umount_fs

 deactivate_volume_group

# Check exit value
 if (( $exit_value == 1 ))
 then
  print "\n\t########### Node \"$(hostname)\": Package halt failed at $(date) ###########"
  exit 1
 else
  print "\n\t########### Node \"$(hostname)\": Package halt completed at $(date) ###########"
  exit 0
 fi

fi
Популярность: 26, Last-modified: Sat, 21 Jul 2001 03:25:39 GMTUnix, базовые принципы и особенности
Файловая система Unix
Внутренняя структура файловой системы Unix Модемы и Motorola (практические рекомендации)
 предполагается, что читатель знаком с администрированием
 в Unix и имеет доступ к справочным материалам, ибо
 в данном руководстве описывается общий ПУТЬ настройки,
 но не дается объяснений почему делается именно так.

1. Подключение модема к Мотороле 922 (плата в/в MVME 197)
 берется ТЕРМИНАЛЬНЫЙ КАБЕЛЬ из КОМПЛЕКТА Моторолы
 (RJ-45 <-> RJ-45 - ОБРАЩЕННЫЙ, 4 скрученные пары)
 один разъем вставлятся в последовательный порт MVME197
 (например, SP4/UPS), второй в гнездо RJ-45, распаянное
 под DB25 (обычное гнездо внешнего модема)
 RJ-45   DB25
 1 DTR                   20
 2 CTS                   5
 3 Signal Ground         7
 4 RxD                   3
 5 TxD                   2
 6 Ground                7
 7 RTS                   4
 8 CD                    8

2. Подключение модема к персоналке.
 см. руководство по подключению модема

3. Именование портов в Unix System V/88 4.0
 SP2/TEL    /dev/contty01
 SP3        /dev/contty02
 SP4/UPS    /dev/contty03

4. Создание метки описания терминальной линии в /etc/ttydefs

38400mdm:38400 -clocal hupcl onlcr -igncr icrnl erase ^h:
   38400 -clocal hupcl onlcr -igncr icrnl erase ^h tab3 -istrip echoe::38400mdm

5. Управление последовательными портами в Unix System V 4.0
 (в режиме суперпользователя)
   pmadm -l -t ttymon
 не должен выдавать строки относящиеся к выбранному Вами порту
   если такие строки присутствуют, то удалите этот сервис:
 pmadm -r -p <имя монитора> -s <имя сервиса>
   добавьте обслуживание данного порта
   если не было ни одного терминального монитора, то добавьте его
      sacadm -a -p ttymonbnu -t ttymon -c /usr/lib/saf/ttymon -v `ttyadm -V`
   добавьте терминальный сервис для исходящих звонков
      pmadm -a -p ttymonbnu -s tty02 -i root -f u -v `ttyadm -V` -m
         "`ttyadm -b -p login: -d /dev/contty02 -l 38400mdm -s /usr/bin/login`"
   добавьте терминальный сервис для входящих звонков (другой порт!)
      pmadm -a -p ttymonbnu -s tty03 -i root -f u -v `ttyadm -V` -m
         "`ttyadm -p login: -d /dev/contty03 -l 38400mdm -s /usr/bin/login`"
   если в Вашем /etc/inittab указан respawn для порта contty02 (contty03),
      то отключите его (поставьте off и выполните команду init q)

6. Конфигурация UUPC/Relcom для связи с региональным фондом
   запускаете программу INSTALL (диалог для версии 2.19)
      если у Вас установлен русификатор экрана, то укажите русский язык
      цветной дисплей или черно-белый
      нажмите Enter
      нажмите Enter
      укажите "Нет"
      введите имя Вашей организации (например, Тьмутараканьский региональный фонд)
      введите полное имя Вашего домена (например, regfond1.tmutar.su)
      вызываемая система (например, ttregfond)
      локальная система (например, ttregfond13)
      имя для входа (обязательно: nuucp)
      пароль (обязательно: nuucp)
      временная зона (например, MSK-8MSD)
      сервер телеконференций (оставьте предлагаемое, все равно его нет)
      телефоны, вызываемой системы (например, 8W093!1234567)
      все правильно
      не надо записывать
      нажмите Enter
      диск C, каталог \uupc
      --- некоторое время расжимаются архивы ---
      копировать документацию
      копировать описания стандартов
      количество модемов (например, 1)
      номер порта (например, COM2)
      выберите модем (не знаю, какой у Вас моде...)
      нажмите Enter
      не использовать FOSSIL драйвер
      введите регистрационное имя локального пользователя(например, root)
      введите Ваше имя, отчество и фамилию
      введите имя домашнего каталога (например, C:\uupc\root)
      язык, конечно, русский
      имя любимого текстового редактора (у меня c:\me\me.exe)
      не надо кодировки VOLAPJUK
      нужны ли подтверждения о доставке почты (по вкусу)
      хватит пока пользователей
      нажмите Enter
      имя ответственного за почту (у нас, конечно, root)
      куда положить исполняемые файлы (например, C:\bin)
      читаете введение и нажимаете Enter
      Все! Это, конечно, самый простейший случай
   Внимание: если у Вас модем ZyXel, то в файле \uupc\conf\dialers
      в строке zyxel-u1496 замените &S1 на &S0
   В файле \uupc\conf\systems перед словом word и в конце добавьте \n\c
      между \w15 и \c добавьте \n\d

7. завести пользователей uucp и nuucp (обычно они уже есть)
        uucp:x:5:5:0000-uucp(0000):/usr/lib/uucp
        nuucp:x:10:10:0000uucp(0000):/var/spool/uucppublic:/usr/lib/uucp/uucico
        не забудьте сказать:
    pwconv
 задайте пароль для пользователя nuucp
    passwd nuucp
    New password: nuucp
    Re-enter Password: nuucp

8. Конфигурация UUPC в Unix V/88 4.0 для ожидания вызова
 (предполагаем, что uname -n установлена в ttregfond)
 все работы производить под именем uucp:
    su uucp (из-под root)
   в файле /etc/uucp/Permissions должна быть строка
 LOGNAME=nuucp READ=/ MACHINE=ttregfond13 REQUEST=yes SENDFILES=yes
   в файле /etc/uucp/Systems для каждой удаленной системы UUPC/Relcom
      должна быть строка:
 ttregfond13 Any ACU I38400 номер_телефона_PC
   в файле /etc/uucp/Dialers
 имя_модема =<символ ожидания гудка>-<символ паузы при наборе номера>
   \M\d+++\dATH\r\c OK ATZ\r\c OK\r \EATDP\T\r\c CONNECT \r\m\c
(надеюсь, что всю необходимую настройку модема Вы занесли в профиль конф-и 0)
   в файле /etc/uucp/Devices
 ACU contty03,M - I38400 имя_модема

9. Уберите из crontab для root вызовы uudemon.poll и uudemon.hour
   (uudemon.admin и uudemon.cleanup можно оставить)

10. Опробуйте пересылку почты
   а) в Unix выдайте команду
  mail root!ttregfond13
  test from Unix
  ^D
   б) в UUPC/Relcom пошлите письмо по адресу root!ttregfond
   в) в UUPC/Relcom выполните команду uupc

   UUPC/Relcom    должен   позвонить   Unix-у,   передать   имя
пользователя nuucp, пароль nuucp, после чего запустится  uucico
в  MS-DOS  и  UNIX,  они  договорятся  между  собой, обменяются
письмами и завершат сеанс связи. Теперь сказав mail  в  UNIX  и
bmail в MS-DOS Вы должны получить соответствующие письма.
From bog Thu May 18 18:21 MSD 1995
Date: Thu, 18 May 1995 18:21:57 +0400
From: "Sergej E. Bogomolow" 
To: moshkow
Subject: modems at motorolla
Content-Type: X-sun-attachment
Content-Length: 5991

----------
X-Sun-Data-Type: default
X-Sun-Data-Description: default
X-Sun-Data-Name: modmodem.besta
X-Sun-Charset: iso-8859-1
X-Sun-Content-Lines: 144

 Модемы и Motorola (практические рекомендации)
 предполагается, что читатель знаком с администрированием
 в Unix и имеет доступ к справочным материалам, ибо
 в данном руководстве описывается общий ПУТЬ настройки,
 но не дается объяснений почему делается именно так.

1. Подключение модема к Мотороле 922 (плата в/в MVME 197)
 берется терминальный кабель из комплекта Моторолы
 (RJ-45 <-> RJ-45 - обращенный, 4 скрученные пары)
 один разъем вставлятся в последовательный порт MVME197
 (например, SP4/UPS), второй в гнездо RJ-45, распаянное
 под DB25 (обычное гнездо внешнего модема)
 RJ-45   DB25
 1 DTR                   20
 2 CTS                   5
 3 Signal Ground         7
 4 RxD                   3
 5 TxD                   2
 6 Ground                7
 7 RTS                   4
 8 CD                    8

2. Подключение модема к персоналке.
 см. руководство по подключению модема
 Для ZyXel-1496E проинициализируйте модем следующим образом
 AT&F
  OK
 ATS0=1S18=2&W
  OK

3. Именование портов в Unix System V/88 4.0
 SP2/TEL    /dev/contty01
 SP3        /dev/contty02
 SP4/UPS    /dev/contty03

4. Создание метки описания терминальной линии в /etc/ttydefs

38400mdm:38400 -clocal hupcl onlcr -igncr icrnl erase ^h:
   38400 -clocal hupcl onlcr -igncr icrnl erase ^h tab3 -istrip echoe::38400mdm

5. Управление последовательными портами в Unix System V 4.0
 (в режиме суперпользователя)
   pmadm -l -t ttymon
 не должен выдавать строки относящиеся к выбранному Вами порту
   если такие строки присутствуют, то удалите этот сервис:
 pmadm -r -p <имя монитора> -s <имя сервиса>
   добавьте обслуживание данного порта
   если не было ни одного терминального монитора, то добавьте его
      sacadm -a -p ttymonbnu -t ttymon -c /usr/lib/saf/ttymon -v `ttyadm -V`
   добавьте терминальный сервис (порт tty02 для примера)
      pmadm -a -p ttymonbnu -s tty02 -i root -f u -v `ttyadm -V` -m
         "`ttyadm -b -h -r 1 -p login: -d /dev/contty02
         -l 38400mdm -s /usr/bin/login`"
   если в Вашем /etc/inittab указан respawn для порта contty02,
      то отключите его (поставьте off и выполните команду init q)

6. Конфигурация UUPC/Relcom для связи с региональным фондом
   запускаете программу INSTALL (диалог для версии 2.19)
      если у Вас установлен русификатор экрана, то укажите русский язык
      цветной дисплей или черно-белый
      нажмите Enter
      нажмите Enter
      укажите "Нет"
      введите имя Вашей организации (например, Тьмутараканьский региональный фонд)
      введите полное имя Вашего домена (например, regfond1.tmutar.su)
      вызываемая система (например, ttregfond)
      локальная система (например, ttregfond13)
      имя для входа (обязательно: nuucp)
      пароль (обязательно: nuucp)
      временная зона (например, MSK-8MSD)
      сервер телеконференций (оставьте предлагаемое, все равно его нет)
      телефоны, вызываемой системы (например, 8W093!1234567)
      все правильно
      не надо записывать
      нажмите Enter
      диск C, каталог \uupc
      --- некоторое время расжимаются архивы ---
      копировать документацию
      копировать описания стандартов
      количество модемов (например, 1)
      номер порта (например, COM2)
      выберите модем (не знаю, какой у Вас моде...)
      нажмите Enter
      не использовать FOSSIL драйвер
      введите регистрационное имя локального пользователя(например, root)
      введите Ваше имя, отчество и фамилию
      введите имя домашнего каталога (например, C:\uupc\root)
      язык, конечно, русский
      имя любимого текстового редактора (у меня c:\me\me.exe)
      не надо кодировки VOLAPJUK
      нужны ли подтверждения о доставке почты (по вкусу)
      хватит пока пользователей
      нажмите Enter
      имя ответственного за почту (у нас, конечно, root)
      куда положить исполняемые файлы (например, C:\bin)
      читаете введение и нажимаете Enter
      Все! Это, конечно, самый простейший случай
   Внимание: если у Вас модем ZyXel, то в файле \uupc\conf\dialers
      в строке zyxel-u1496 замените &S1 на &S0
   В файле \uupc\conf\systems перед словом word и в конце добавьте \n\c
      между \w15 и \c добавьте \n\d

7. завести пользователей uucp и nuucp (обычно они уже есть)
        uucp:x:5:5:0000-uucp(0000):/usr/lib/uucp
        nuucp:x:10:10:0000uucp(0000):/var/spool/uucppublic:/usr/lib/uucp/uucico
        не забудьте сказать:
    pwconv
 задайте пароль для пользователя nuucp
    passwd nuucp
    New password: nuucp
    Re-enter Password: nuucp

8. Конфигурация UUPC в Unix V/88 4.0 для ожидания вызова
 (предполагаем, что uname -n установлена в ttregfond)
 все работы производить под именем uucp:
    su uucp (из-под root)
   в файле /etc/uucp/Permissions должна быть строка
 LOGNAME=nuucp READ=/ MACHINE=ttregfond13 REQUEST=yes SENDFILES=yes
   в файле /etc/uucp/Systems для каждой удаленной системы UUPC/Relcom
      должна быть строка:
 ttregfond13 Any ACU I38400 номер_телефона_PC
   в файле /etc/uucp/Dialers
 имя_модема =<символ ожидания гудка>-<символ паузы при наборе номера>
   \M\d+++\dATH\r\c OK ATZ\r\c OK\r \EATDP\T\r\c CONNECT \r\m\c
(надеюсь, что всю необходимую настройку модема Вы занесли в профиль конф-и 0)
   в файле /etc/uucp/Devices
 ACU contty02,M - I38400 имя_модема

9. Уберите из crontab для root вызовы uudemon.poll и uudemon.hour
   (uudemon.admin и uudemon.cleanup можно оставить)

10. Опробуйте пересылку почты
   а) в Unix выдайте команду
  mail root!ttregfond13
  test from Unix
  ^D
   б) в UUPC/Relcom пошлите письмо по адресу root!ttregfond
   в) в UUPC/Relcom выполните команду uupc

   UUPC/Relcom должен позвонить Unix-у, передать имя пользователя nuucp,
 пароль nuucp, после чего запустится uucico в MS-DOS и UNIX,
 они договорятся между собой, обменяются письмами и завершат сеанс
 связи. Теперь сказав mail в UNIX и в MS-DOS Вы должны получить
 соответствующие письма.
Популярность: 16, Last-modified: Sat, 27 May 1995 11:01:10 GMTСодержание
Fine HTML
Printed version
txt(Word,КПК)
Lib.ru html
Беста: Очень кратко, как отправлять и читать электронную почту
0. Послать файл на другую машину

        rcp     файл  ... файлn  машина:[каталог]
        rcp     машина1:файл     машина2:[каталог]
        rcp     машина1:файл     каталог
        rcp -rp каталог          машина:[каталог]

0. Поговорить с другим пользователем
   talk пользователь@сетевое.имя.машины

     talk vv@s18

1. Регистрация внизу на SUNе

Для регистрации на SUNе обращайтесь в к.516 к Пронину, Шустику,
Мошкову. Пользователи  без  пароля  на  своей  Бесте,  на  SUNе
регистрироваться  не  будут. Пользователи, не имеющие пароля на
своей Бесте, будут "ликвидироваться".

2. Залогиниться на другую машину

        t imq-mashiny           или   telnet imq-mashiny

например:

        t romanov       #       Login на Романовскую Бесту с принтером
        t s08           #       Login на Sun с электронной почтой

2.      Посылка почты:
        а. залогиниться на s08
        б. mailx -s "С приветом" ivanov@whouse.gov  [ < fail-s-pisxmom ]
        ^D      - выход

3.      Посылка почты прямо с Бесты

     s08  mailx  -s "Subject_с_приветом" ivanov@whouse.gov < fail-s-pisxmom

4. Посылка почты на русском языке "другу"

     KOI fail-s-pisxmom | s08 "mail -s "Subject_привет" ivanov@whitehouse.gov

4. Есть ли почта для меня?

     s08 mail -H

4. Чтение почты:

Залогиниться на s08

     mailx

Команды чтения:

& h [ 23 ]              заголовки писем [ с 23-го начиная ]
& 12                    прочесть письмо 12
& s file                сохранить письмо в файле
& d 1 3 - 6             уничтожить письма
& r                     ответить на письмо
& q                     выйти с сохранением
& x                     выйти без изменений в почтовом ящике

5. Настройка mail. В файл   .mailrc нужно добавить строчку:

      set scr=22
Тогда при просмотре почты она будет листаться страницами по 22 строки.

Можно определить группы адресов (почтовые alias'ы)
      alias  dwoe  mur@systud.msk.su moshkow@ipsun.ras.ru
Тогда вместо    mail mur@systud.msk.su moshkow@ipsun.ras.ru
можно будет писать  mail dwoe

Чтобы сохранять для себя копии всех отправленных писем
      set record='/home/moshkow/Mail/Mail.sended'
Убедитесь (обеспечьте) что указанный фай существует
Популярность: 22, Last-modified: Sun, 31 Aug 1997 19:44:49 GMTDNS - Domain Name Service
Конфигурирование DNS-клиента
Как посмотреть зоны DNS
 * Конфигурирование DNS-сервера * 
Пример заполнения файлов
Дополнительная информацияНачало работы в системе
Вход в себя
Переменные окружения.
Пользовательский профайл
Клавиши для редактирования командной строки
Выключение системы